{
  "contractName": "ICurve",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "delta",
          "type": "uint128"
        }
      ],
      "name": "validateDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newSpotPrice",
          "type": "uint128"
        }
      ],
      "name": "validateSpotPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "spotPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "delta",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "numItems",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFeeMultiplier",
          "type": "uint256"
        }
      ],
      "name": "getBuyInfo",
      "outputs": [
        {
          "internalType": "enum CurveErrorCodes.Error",
          "name": "error",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "newSpotPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "newDelta",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "inputValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "spotPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "delta",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "numItems",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFeeMultiplier",
          "type": "uint256"
        }
      ],
      "name": "getSellInfo",
      "outputs": [
        {
          "internalType": "enum CurveErrorCodes.Error",
          "name": "error",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "newSpotPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "newDelta",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "outputValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getBuyInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"inputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getSellInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"outputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"}],\"name\":\"validateDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"}],\"name\":\"validateSpotPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getBuyInfo(uint128,uint128,uint256,uint256,uint256)\":{\"params\":{\"delta\":\"The delta parameter of the pair, what it means depends on the curve\",\"feeMultiplier\":\"Determines how much fee the LP takes from this trade, 18 decimals\",\"numItems\":\"The number of NFTs the user is buying from the pair\",\"protocolFeeMultiplier\":\"Determines how much fee the protocol takes from this trade, 18 decimals\",\"spotPrice\":\"The current selling spot price of the pair, in tokens\"},\"returns\":{\"error\":\"Any math calculation errors, only Error.OK means the returned values are valid\",\"inputValue\":\"The amount that the user should pay, in tokens\",\"newDelta\":\"The updated delta, used to parameterize the bonding curve\",\"newSpotPrice\":\"The updated selling spot price, in tokens\",\"protocolFee\":\"The amount of fee to send to the protocol, in tokens\"}},\"getSellInfo(uint128,uint128,uint256,uint256,uint256)\":{\"params\":{\"delta\":\"The delta parameter of the pair, what it means depends on the curve\",\"feeMultiplier\":\"Determines how much fee the LP takes from this trade, 18 decimals\",\"numItems\":\"The number of NFTs the user is selling to the pair\",\"protocolFeeMultiplier\":\"Determines how much fee the protocol takes from this trade, 18 decimals\",\"spotPrice\":\"The current selling spot price of the pair, in tokens\"},\"returns\":{\"error\":\"Any math calculation errors, only Error.OK means the returned values are valid\",\"newDelta\":\"The updated delta, used to parameterize the bonding curve\",\"newSpotPrice\":\"The updated selling spot price, in tokens\",\"outputValue\":\"The amount that the user should receive, in tokens\",\"protocolFee\":\"The amount of fee to send to the protocol, in tokens\"}},\"validateDelta(uint128)\":{\"params\":{\"delta\":\"The delta value to be validated\"},\"returns\":{\"valid\":\"True if delta is valid, false otherwise\"}},\"validateSpotPrice(uint128)\":{\"params\":{\"newSpotPrice\":\"The new spot price to be set\"},\"returns\":{\"valid\":\"True if the new spot price is valid, false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBuyInfo(uint128,uint128,uint256,uint256,uint256)\":{\"notice\":\"Given the current state of the pair and the trade, computes how much the user should pay to purchase an NFT from the pair, the new spot price, and other values.\"},\"getSellInfo(uint128,uint128,uint256,uint256,uint256)\":{\"notice\":\"Given the current state of the pair and the trade, computes how much the user should receive when selling NFTs to the pair, the new spot price, and other values.\"},\"validateDelta(uint128)\":{\"notice\":\"Validates if a delta value is valid for the curve. The criteria for validity can be different for each type of curve, for instance ExponentialCurve requires delta to be greater than 1.\"},\"validateSpotPrice(uint128)\":{\"notice\":\"Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/bonding-curves/ICurve.sol\":\"ICurve\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]},\"project:/contracts/bonding-curves/ICurve.sol\":{\"keccak256\":\"0xc845d2cb70966da8b2bd6f5d51abbfd459ae9c3f27449b8243aa5182bc174d24\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3338d5eea46a635ead3c390632dc4eaa0de0a870c784902c27c3c88359fce0d2\",\"dweb:/ipfs/QmWmELkig6wiKxEzuNRmf2PFjJbBJFnePSASh2DKBnCWfX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {CurveErrorCodes} from \"./CurveErrorCodes.sol\";\n\ninterface ICurve {\n    /**\n        @notice Validates if a delta value is valid for the curve. The criteria for\n        validity can be different for each type of curve, for instance ExponentialCurve\n        requires delta to be greater than 1.\n        @param delta The delta value to be validated\n        @return valid True if delta is valid, false otherwise\n     */\n    function validateDelta(uint128 delta) external pure returns (bool valid);\n\n    /**\n        @notice Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\n        @param newSpotPrice The new spot price to be set\n        @return valid True if the new spot price is valid, false otherwise\n     */\n    function validateSpotPrice(uint128 newSpotPrice)\n        external\n        view\n        returns (bool valid);\n\n    /**\n        @notice Given the current state of the pair and the trade, computes how much the user\n        should pay to purchase an NFT from the pair, the new spot price, and other values.\n        @param spotPrice The current selling spot price of the pair, in tokens\n        @param delta The delta parameter of the pair, what it means depends on the curve\n        @param numItems The number of NFTs the user is buying from the pair\n        @param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n        @param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n        @return error Any math calculation errors, only Error.OK means the returned values are valid\n        @return newSpotPrice The updated selling spot price, in tokens\n        @return newDelta The updated delta, used to parameterize the bonding curve\n        @return inputValue The amount that the user should pay, in tokens\n        @return protocolFee The amount of fee to send to the protocol, in tokens\n     */\n    function getBuyInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 inputValue,\n            uint256 protocolFee\n        );\n\n    /**\n        @notice Given the current state of the pair and the trade, computes how much the user\n        should receive when selling NFTs to the pair, the new spot price, and other values.\n        @param spotPrice The current selling spot price of the pair, in tokens\n        @param delta The delta parameter of the pair, what it means depends on the curve\n        @param numItems The number of NFTs the user is selling to the pair\n        @param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n        @param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n        @return error Any math calculation errors, only Error.OK means the returned values are valid\n        @return newSpotPrice The updated selling spot price, in tokens\n        @return newDelta The updated delta, used to parameterize the bonding curve\n        @return outputValue The amount that the user should receive, in tokens\n        @return protocolFee The amount of fee to send to the protocol, in tokens\n     */\n    function getSellInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 outputValue,\n            uint256 protocolFee\n        );\n}\n",
  "sourcePath": "/Users/brett/workSpace/NFTSea/nftsea-contract/contracts/bonding-curves/ICurve.sol",
  "ast": {
    "absolutePath": "project:/contracts/bonding-curves/ICurve.sol",
    "exportedSymbols": {
      "CurveErrorCodes": [
        7963
      ],
      "ICurve": [
        8375
      ]
    },
    "id": 8376,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8306,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:31"
      },
      {
        "absolutePath": "project:/contracts/bonding-curves/CurveErrorCodes.sol",
        "file": "./CurveErrorCodes.sol",
        "id": 8308,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8376,
        "sourceUnit": 7964,
        "src": "62:54:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8307,
              "name": "CurveErrorCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7963,
              "src": "70:15:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICurve",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 8375,
        "linearizedBaseContracts": [
          8375
        ],
        "name": "ICurve",
        "nameLocation": "128:6:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 8309,
              "nodeType": "StructuredDocumentation",
              "src": "141:343:31",
              "text": "@notice Validates if a delta value is valid for the curve. The criteria for\nvalidity can be different for each type of curve, for instance ExponentialCurve\nrequires delta to be greater than 1.\n@param delta The delta value to be validated\n@return valid True if delta is valid, false otherwise"
            },
            "functionSelector": "0ae67ccc",
            "id": 8316,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validateDelta",
            "nameLocation": "498:13:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8311,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "520:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8316,
                  "src": "512:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8310,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:15:31"
            },
            "returnParameters": {
              "id": 8315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8314,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "555:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8316,
                  "src": "550:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8313,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:12:31"
            },
            "scope": 8375,
            "src": "489:73:31",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8317,
              "nodeType": "StructuredDocumentation",
              "src": "568:335:31",
              "text": "@notice Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\n@param newSpotPrice The new spot price to be set\n@return valid True if the new spot price is valid, false otherwise"
            },
            "functionSelector": "a1bbb2e8",
            "id": 8324,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validateSpotPrice",
            "nameLocation": "917:17:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8319,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "943:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8324,
                  "src": "935:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8318,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:22:31"
            },
            "returnParameters": {
              "id": 8323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8322,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "1009:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8324,
                  "src": "1004:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1003:12:31"
            },
            "scope": 8375,
            "src": "908:108:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8325,
              "nodeType": "StructuredDocumentation",
              "src": "1022:1054:31",
              "text": "@notice Given the current state of the pair and the trade, computes how much the user\nshould pay to purchase an NFT from the pair, the new spot price, and other values.\n@param spotPrice The current selling spot price of the pair, in tokens\n@param delta The delta parameter of the pair, what it means depends on the curve\n@param numItems The number of NFTs the user is buying from the pair\n@param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n@param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n@return error Any math calculation errors, only Error.OK means the returned values are valid\n@return newSpotPrice The updated selling spot price, in tokens\n@return newDelta The updated delta, used to parameterize the bonding curve\n@return inputValue The amount that the user should pay, in tokens\n@return protocolFee The amount of fee to send to the protocol, in tokens"
            },
            "functionSelector": "7ca542ac",
            "id": 8349,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBuyInfo",
            "nameLocation": "2090:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8327,
                  "mutability": "mutable",
                  "name": "spotPrice",
                  "nameLocation": "2118:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2110:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8326,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8329,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "2145:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2137:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8328,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8331,
                  "mutability": "mutable",
                  "name": "numItems",
                  "nameLocation": "2168:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2160:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8333,
                  "mutability": "mutable",
                  "name": "feeMultiplier",
                  "nameLocation": "2194:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2186:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "protocolFeeMultiplier",
                  "nameLocation": "2225:21:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2217:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:152:31"
            },
            "returnParameters": {
              "id": 8348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8339,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "2335:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2313:27:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$7962",
                    "typeString": "enum CurveErrorCodes.Error"
                  },
                  "typeName": {
                    "id": 8338,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8337,
                      "name": "CurveErrorCodes.Error",
                      "nameLocations": [
                        "2313:15:31",
                        "2329:5:31"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7962,
                      "src": "2313:21:31"
                    },
                    "referencedDeclaration": 7962,
                    "src": "2313:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8341,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "2362:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2354:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8340,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2354:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8343,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "2396:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2388:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8342,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8345,
                  "mutability": "mutable",
                  "name": "inputValue",
                  "nameLocation": "2426:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2418:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8347,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "2458:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8349,
                  "src": "2450:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2299:180:31"
            },
            "scope": 8375,
            "src": "2081:399:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8350,
              "nodeType": "StructuredDocumentation",
              "src": "2486:1059:31",
              "text": "@notice Given the current state of the pair and the trade, computes how much the user\nshould receive when selling NFTs to the pair, the new spot price, and other values.\n@param spotPrice The current selling spot price of the pair, in tokens\n@param delta The delta parameter of the pair, what it means depends on the curve\n@param numItems The number of NFTs the user is selling to the pair\n@param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n@param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n@return error Any math calculation errors, only Error.OK means the returned values are valid\n@return newSpotPrice The updated selling spot price, in tokens\n@return newDelta The updated delta, used to parameterize the bonding curve\n@return outputValue The amount that the user should receive, in tokens\n@return protocolFee The amount of fee to send to the protocol, in tokens"
            },
            "functionSelector": "097cc63d",
            "id": 8374,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSellInfo",
            "nameLocation": "3559:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8352,
                  "mutability": "mutable",
                  "name": "spotPrice",
                  "nameLocation": "3588:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3580:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8351,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8354,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "3615:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3607:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8353,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8356,
                  "mutability": "mutable",
                  "name": "numItems",
                  "nameLocation": "3638:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3630:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8358,
                  "mutability": "mutable",
                  "name": "feeMultiplier",
                  "nameLocation": "3664:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3656:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8360,
                  "mutability": "mutable",
                  "name": "protocolFeeMultiplier",
                  "nameLocation": "3695:21:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3687:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3570:152:31"
            },
            "returnParameters": {
              "id": 8373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8364,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "3805:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3783:27:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$7962",
                    "typeString": "enum CurveErrorCodes.Error"
                  },
                  "typeName": {
                    "id": 8363,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8362,
                      "name": "CurveErrorCodes.Error",
                      "nameLocations": [
                        "3783:15:31",
                        "3799:5:31"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7962,
                      "src": "3783:21:31"
                    },
                    "referencedDeclaration": 7962,
                    "src": "3783:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8366,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "3832:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3824:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8365,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3824:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8368,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "3866:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3858:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8367,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3858:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8370,
                  "mutability": "mutable",
                  "name": "outputValue",
                  "nameLocation": "3896:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3888:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8372,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "3929:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "3921:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3921:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:181:31"
            },
            "scope": 8375,
            "src": "3550:401:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8376,
        "src": "118:3835:31",
        "usedErrors": []
      }
    ],
    "src": "37:3917:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-02T11:37:45.669Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getBuyInfo(uint128,uint128,uint256,uint256,uint256)": {
        "params": {
          "delta": "The delta parameter of the pair, what it means depends on the curve",
          "feeMultiplier": "Determines how much fee the LP takes from this trade, 18 decimals",
          "numItems": "The number of NFTs the user is buying from the pair",
          "protocolFeeMultiplier": "Determines how much fee the protocol takes from this trade, 18 decimals",
          "spotPrice": "The current selling spot price of the pair, in tokens"
        },
        "returns": {
          "error": "Any math calculation errors, only Error.OK means the returned values are valid",
          "inputValue": "The amount that the user should pay, in tokens",
          "newDelta": "The updated delta, used to parameterize the bonding curve",
          "newSpotPrice": "The updated selling spot price, in tokens",
          "protocolFee": "The amount of fee to send to the protocol, in tokens"
        }
      },
      "getSellInfo(uint128,uint128,uint256,uint256,uint256)": {
        "params": {
          "delta": "The delta parameter of the pair, what it means depends on the curve",
          "feeMultiplier": "Determines how much fee the LP takes from this trade, 18 decimals",
          "numItems": "The number of NFTs the user is selling to the pair",
          "protocolFeeMultiplier": "Determines how much fee the protocol takes from this trade, 18 decimals",
          "spotPrice": "The current selling spot price of the pair, in tokens"
        },
        "returns": {
          "error": "Any math calculation errors, only Error.OK means the returned values are valid",
          "newDelta": "The updated delta, used to parameterize the bonding curve",
          "newSpotPrice": "The updated selling spot price, in tokens",
          "outputValue": "The amount that the user should receive, in tokens",
          "protocolFee": "The amount of fee to send to the protocol, in tokens"
        }
      },
      "validateDelta(uint128)": {
        "params": {
          "delta": "The delta value to be validated"
        },
        "returns": {
          "valid": "True if delta is valid, false otherwise"
        }
      },
      "validateSpotPrice(uint128)": {
        "params": {
          "newSpotPrice": "The new spot price to be set"
        },
        "returns": {
          "valid": "True if the new spot price is valid, false otherwise"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getBuyInfo(uint128,uint128,uint256,uint256,uint256)": {
        "notice": "Given the current state of the pair and the trade, computes how much the user should pay to purchase an NFT from the pair, the new spot price, and other values."
      },
      "getSellInfo(uint128,uint128,uint256,uint256,uint256)": {
        "notice": "Given the current state of the pair and the trade, computes how much the user should receive when selling NFTs to the pair, the new spot price, and other values."
      },
      "validateDelta(uint128)": {
        "notice": "Validates if a delta value is valid for the curve. The criteria for validity can be different for each type of curve, for instance ExponentialCurve requires delta to be greater than 1."
      },
      "validateSpotPrice(uint128)": {
        "notice": "Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token."
      }
    },
    "version": 1
  }
}