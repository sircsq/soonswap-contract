{
  "contractName": "LSSVMPair",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "enum CurveErrorCodes.Error",
          "name": "error",
          "type": "uint8"
        }
      ],
      "name": "BondingCurveError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable_NewOwnerZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable_NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AssetRecipientChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newDelta",
          "type": "uint128"
        }
      ],
      "name": "DeltaUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newFee",
          "type": "uint96"
        }
      ],
      "name": "FeeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NFTWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newSpotPrice",
          "type": "uint128"
        }
      ],
      "name": "SpotPriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SwapNFTInPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SwapNFTOutPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assetRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delta",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spotPrice",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_assetRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_delta",
          "type": "uint128"
        },
        {
          "internalType": "uint96",
          "name": "_fee",
          "type": "uint96"
        },
        {
          "internalType": "uint128",
          "name": "_spotPrice",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numNFTs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExpectedTokenInput",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isRouter",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "routerCaller",
          "type": "address"
        }
      ],
      "name": "swapTokenForAnyNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "maxExpectedTokenInput",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isRouter",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "routerCaller",
          "type": "address"
        }
      ],
      "name": "swapTokenForSpecificNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minExpectedTokenOutput",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "tokenRecipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isRouter",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "routerCaller",
          "type": "address"
        }
      ],
      "name": "swapNFTsForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numNFTs",
          "type": "uint256"
        }
      ],
      "name": "getBuyNFTQuote",
      "outputs": [
        {
          "internalType": "enum CurveErrorCodes.Error",
          "name": "error",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newSpotPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numNFTs",
          "type": "uint256"
        }
      ],
      "name": "getSellNFTQuote",
      "outputs": [
        {
          "internalType": "enum CurveErrorCodes.Error",
          "name": "error",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newSpotPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllHeldIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairVariant",
      "outputs": [
        {
          "internalType": "enum ILSSVMPairFactoryLike.PairVariant",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract ILSSVMPairFactoryLike",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondingCurve",
      "outputs": [
        {
          "internalType": "contract ICurve",
          "name": "_bondingCurve",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolType",
      "outputs": [
        {
          "internalType": "enum LSSVMPair.PoolType",
          "name": "_poolType",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssetRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "_assetRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "a",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "a",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC1155",
          "name": "a",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newSpotPrice",
          "type": "uint128"
        }
      ],
      "name": "changeSpotPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newDelta",
          "type": "uint128"
        }
      ],
      "name": "changeDelta",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "newFee",
          "type": "uint96"
        }
      ],
      "name": "changeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "changeAssetRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "call",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "multicall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"}],\"name\":\"BondingCurveError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_NewOwnerZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AssetRecipientChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"}],\"name\":\"DeltaUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newFee\",\"type\":\"uint96\"}],\"name\":\"FeeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NFTWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"}],\"name\":\"SpotPriceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SwapNFTInPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SwapNFTOutPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assetRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondingCurve\",\"outputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"_bondingCurve\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"changeAssetRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"}],\"name\":\"changeDelta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"newFee\",\"type\":\"uint96\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"}],\"name\":\"changeSpotPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delta\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract ILSSVMPairFactoryLike\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllHeldIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"_assetRecipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numNFTs\",\"type\":\"uint256\"}],\"name\":\"getBuyNFTQuote\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newSpotPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numNFTs\",\"type\":\"uint256\"}],\"name\":\"getSellNFTQuote\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newSpotPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_assetRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_delta\",\"type\":\"uint128\"},{\"internalType\":\"uint96\",\"name\":\"_fee\",\"type\":\"uint96\"},{\"internalType\":\"uint128\",\"name\":\"_spotPrice\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairVariant\",\"outputs\":[{\"internalType\":\"enum ILSSVMPairFactoryLike.PairVariant\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolType\",\"outputs\":[{\"internalType\":\"enum LSSVMPair.PoolType\",\"name\":\"_poolType\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spotPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minExpectedTokenOutput\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"tokenRecipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRouter\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"routerCaller\",\"type\":\"address\"}],\"name\":\"swapNFTsForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numNFTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExpectedTokenInput\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRouter\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"routerCaller\",\"type\":\"address\"}],\"name\":\"swapTokenForAnyNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"maxExpectedTokenInput\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRouter\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"routerCaller\",\"type\":\"address\"}],\"name\":\"swapTokenForSpecificNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"withdrawERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"boredGenius and 0xmons\",\"kind\":\"dev\",\"methods\":{\"call(address,bytes)\":{\"params\":{\"data\":\"The calldata to pass to the contract\",\"target\":\"The contract to call\"}},\"changeAssetRecipient(address)\":{\"params\":{\"newRecipient\":\"The new asset recipient\"}},\"changeDelta(uint128)\":{\"params\":{\"newDelta\":\"The new delta parameter\"}},\"changeFee(uint96)\":{\"params\":{\"newFee\":\"The new LP fee percentage, 18 decimals\"}},\"changeSpotPrice(uint128)\":{\"params\":{\"newSpotPrice\":\"The new selling spot price value, in Token\"}},\"getBuyNFTQuote(uint256)\":{\"details\":\"Used as read function to query the bonding curve for buy pricing info\",\"params\":{\"numNFTs\":\"The number of NFTs to buy from the pair\"}},\"getSellNFTQuote(uint256)\":{\"details\":\"Used as read function to query the bonding curve for sell pricing info\",\"params\":{\"numNFTs\":\"The number of NFTs to sell to the pair\"}},\"initialize(address,address,uint128,uint96,uint128)\":{\"details\":\"Only called once by factory to initialize. We verify this by making sure that the current owner is address(0). The Ownable library we use disallows setting the owner to be address(0), so this condition should only be valid before the first initialize call.\",\"params\":{\"_assetRecipient\":\"The address that will receive the TOKEN or NFT sent to this pair during swaps. NOTE: If set to address(0), they will go to the pair itself.\",\"_delta\":\"The initial delta of the bonding curve\",\"_fee\":\"The initial % fee taken, if this is a trade pair\",\"_owner\":\"The owner of the pair\",\"_spotPrice\":\"The initial price to sell an asset into the pair\"}},\"multicall(bytes[],bool)\":{\"details\":\"Intended for withdrawing/altering pool pricing in one tx, only callable by owner, cannot change owner\",\"params\":{\"calls\":\"The calldata for each call to make\",\"revertOnFail\":\"Whether or not to revert the entire tx if any of the calls fail\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"swapNFTsForToken(uint256[],uint256,address,bool,address)\":{\"details\":\"To compute the amount of token to that will be received, call bondingCurve.getSellInfo.\",\"params\":{\"isRouter\":\"True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.\",\"minExpectedTokenOutput\":\"The minimum acceptable token received by the sender. If the actual amount is less than this value, the transaction will be reverted.\",\"nftIds\":\"The list of IDs of the NFTs to sell to the pair\",\"routerCaller\":\"If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs.\",\"tokenRecipient\":\"The recipient of the token output\"},\"returns\":{\"outputAmount\":\"The amount of token received\"}},\"swapTokenForAnyNFTs(uint256,uint256,address,bool,address)\":{\"details\":\"To compute the amount of token to send, call bondingCurve.getBuyInfo. This swap function is meant for users who are ID agnostic\",\"params\":{\"isRouter\":\"True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.\",\"maxExpectedTokenInput\":\"The maximum acceptable cost from the sender. If the actual amount is greater than this value, the transaction will be reverted.\",\"nftRecipient\":\"The recipient of the NFTs\",\"numNFTs\":\"The number of NFTs to purchase\",\"routerCaller\":\"If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs.\"},\"returns\":{\"inputAmount\":\"The amount of token used for purchase\"}},\"swapTokenForSpecificNFTs(uint256[],uint256,address,bool,address)\":{\"details\":\"To compute the amount of token to send, call bondingCurve.getBuyInfo This swap is meant for users who want specific IDs. Also higher chance of reverting if some of the specified IDs leave the pool before the swap goes through.\",\"params\":{\"isRouter\":\"True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.\",\"maxExpectedTokenInput\":\"The maximum acceptable cost from the sender. If the actual amount is greater than this value, the transaction will be reverted.\",\"nftIds\":\"The list of IDs of the NFTs to purchase\",\"nftRecipient\":\"The recipient of the NFTs\",\"routerCaller\":\"If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs.\"},\"returns\":{\"inputAmount\":\"The amount of token used for purchase\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Disallows setting to the zero address as a way to more gas-efficiently avoid reinitialization When ownership is transferred, if the new owner implements IOwnershipTransferCallback, we make a callback Can only be called by the current owner.\"},\"withdrawERC1155(address,uint256[],uint256[])\":{\"params\":{\"a\":\"The NFT to transfer\",\"amounts\":\"The amounts of each id to transfer\",\"ids\":\"The NFT ids to transfer\"}},\"withdrawERC20(address,uint256)\":{\"params\":{\"a\":\"The token to transfer\",\"amount\":\"The amount of tokens to send to the owner\"}},\"withdrawERC721(address,uint256[])\":{\"details\":\"If the NFT is the pair's collection, we also remove it from the id tracking (if the NFT is missing enumerable).\",\"params\":{\"a\":\"The NFT to transfer\",\"nftIds\":\"The list of IDs of the NFTs to send to the owner\"}}},\"title\":\"The base contract for an NFT/TOKEN AMM pair\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bondingCurve()\":{\"notice\":\"Returns the type of bonding curve that parameterizes the pair\"},\"call(address,bytes)\":{\"notice\":\"Allows the pair to make arbitrary external calls to contracts whitelisted by the protocol. Only callable by the owner.\"},\"changeAssetRecipient(address)\":{\"notice\":\"Changes the address that will receive assets received from trades. Only callable by the owner.\"},\"changeDelta(uint128)\":{\"notice\":\"Updates the delta parameter. Only callable by the owner.\"},\"changeFee(uint96)\":{\"notice\":\"Updates the fee taken by the LP. Only callable by the owner. Only callable if the pool is a Trade pool. Reverts if the fee is >= MAX_FEE.\"},\"changeSpotPrice(uint128)\":{\"notice\":\"Updates the selling spot price. Only callable by the owner.\"},\"getAllHeldIds()\":{\"notice\":\"Returns all NFT IDs held by the pool\"},\"getAssetRecipient()\":{\"notice\":\"Returns the address that assets that receives assets when a swap is done with this pair Can be set to another address by the owner, if set to address(0), defaults to the pair's own address\"},\"initialize(address,address,uint128,uint96,uint128)\":{\"notice\":\"Called during pair creation to set initial parameters\"},\"multicall(bytes[],bool)\":{\"notice\":\"Allows owner to batch multiple calls, forked from: https://github.com/boringcrypto/BoringSolidity/blob/master/contracts/BoringBatchable.sol\"},\"nft()\":{\"notice\":\"Returns the NFT collection that parameterizes the pair\"},\"pairVariant()\":{\"notice\":\"Returns the pair's variant (NFT is enumerable or not, pair uses ETH or ERC20)\"},\"poolType()\":{\"notice\":\"Returns the pair's type (TOKEN/NFT/TRADE)\"},\"swapNFTsForToken(uint256[],uint256,address,bool,address)\":{\"notice\":\"Sends a set of NFTs to the pair in exchange for token\"},\"swapTokenForAnyNFTs(uint256,uint256,address,bool,address)\":{\"notice\":\"Sends token to the pair in exchange for any `numNFTs` NFTs\"},\"swapTokenForSpecificNFTs(uint256[],uint256,address,bool,address)\":{\"notice\":\"Sends token to the pair in exchange for a specific set of NFTs\"},\"withdrawERC1155(address,uint256[],uint256[])\":{\"notice\":\"Rescues ERC1155 tokens from the pair to the owner. Only callable by the owner.\"},\"withdrawERC20(address,uint256)\":{\"notice\":\"Rescues ERC20 tokens from the pair to the owner. Only callable by the owner (onlyOwnable modifier is in the implemented function).\"},\"withdrawERC721(address,uint256[])\":{\"notice\":\"Rescues a specified set of NFTs owned by the pair to the owner address. (onlyOwnable modifier is in the implemented function)\"}},\"notice\":\"This implements the core swap logic from NFT to TOKEN\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LSSVMPair.sol\":\"LSSVMPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/ILSSVMPairFactoryLike.sol\":{\"keccak256\":\"0x1cbba0c87aefdb0d4d4cc6b603baed5cbb500001a7841a58af5726428830b767\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://f47ee4c89604392e74d3737dc92b6a79bf437bf748fcabf841a14ecf98ce945c\",\"dweb:/ipfs/QmT9YKwhNzLkRSWFovyuCpYjYa7Z7y78iZrVXLU6GtvWQS\"]},\"project:/contracts/LSSVMPair.sol\":{\"keccak256\":\"0x66765f0cd328be99ec642ecfb474fe9bb3bd140a528d82b0544d4d900cc7470a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9bb9ed470cbf78774868f6513d4fe3da8c34ea8110288e8a24e101255330d112\",\"dweb:/ipfs/Qmer9m8WomAcTBPd85h8GWcFmh7desiK7A1QhLZhsb88Wz\"]},\"project:/contracts/LSSVMRouter.sol\":{\"keccak256\":\"0x3b5fecaba8258b9c1eec98d2e014e57898576677f8d4c773ef1c4eca28ae428c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9ca30643b84b91af3505bf36744e801667fdb26c27a8cdad6e0468425d7d1150\",\"dweb:/ipfs/QmNUUDnzfaJCHzcW6R4Jn5bUj2gSJAP41CUpTw52h6ZxAa\"]},\"project:/contracts/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]},\"project:/contracts/bonding-curves/ICurve.sol\":{\"keccak256\":\"0xc845d2cb70966da8b2bd6f5d51abbfd459ae9c3f27449b8243aa5182bc174d24\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3338d5eea46a635ead3c390632dc4eaa0de0a870c784902c27c3c88359fce0d2\",\"dweb:/ipfs/QmWmELkig6wiKxEzuNRmf2PFjJbBJFnePSASh2DKBnCWfX\"]},\"project:/contracts/lib/IOwnershipTransferCallback.sol\":{\"keccak256\":\"0xde525ebc5c03d56e223c7ec16436763e8432b0f90e040eac58eb0123c172c0f7\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://575c817eb62547db9d69cfca2978127bb458752d551f884039a81e67fc11c191\",\"dweb:/ipfs/QmX2Fco7R9DZq7swEdD7zDi2CxdDrFgDPPi2JrnNSuMN2U\"]},\"project:/contracts/lib/OwnableWithTransferCallback.sol\":{\"keccak256\":\"0x911a1d3248ba5771c4fec49a28a90bc77855eed016464b68de79ea4d79a76e66\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4062e6c217c523417acf136b4c9cbabcdb4ed1bd3fc57363434242effb8793b6\",\"dweb:/ipfs/QmQbHmySvEf9PGMTCfFh7yChxHu3TjD2woUC9QQfPrK2HT\"]},\"project:/contracts/lib/ReentrancyGuard.sol\":{\"keccak256\":\"0x879a738e470b63aac602ec990d8fd3384d8ad7fafb0be3ef4c4230ed01681374\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbe7f77e24de9701c62fdd1a56a53de050a1bdb063833e1e413a16bc0885655\",\"dweb:/ipfs/QmTEnFQbNU2ziqtVKWNBiPZEfeEroowNj1pFAmuGYW7oHn\"]},\"project:/contracts/tokens/ERC20.sol\":{\"keccak256\":\"0x058e0708ffdd2b04a17b96b5775d9fab8daa19d3cd37d26ce6c923679bf9cc9a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc16a35908a2205e07aa95d572e1a7eb79e0694a21e835099ffa3b8dd12c72bb\",\"dweb:/ipfs/QmXVcoSJP7XxAMBAfZKinVxSEN76qP9Z1r4Ug27qLfYTvf\"]},\"project:/contracts/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x50f187c86835070ec519acffcc259cd7900fdb85cb53333210fba9491eb65eca\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8ec4b716247a140c1ec447717127a7a780a5545eedcca24676415efaefe0e340\",\"dweb:/ipfs/Qmb1YXkn4oac5Wt7rjM98iih7rjys4YcVDJcqcbapYudnF\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"./tokens/ERC20.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {OwnableWithTransferCallback} from \"./lib/OwnableWithTransferCallback.sol\";\nimport {ReentrancyGuard} from \"./lib/ReentrancyGuard.sol\";\nimport {ICurve} from \"./bonding-curves/ICurve.sol\";\nimport {LSSVMRouter} from \"./LSSVMRouter.sol\";\nimport {ILSSVMPairFactoryLike} from \"./ILSSVMPairFactoryLike.sol\";\nimport {CurveErrorCodes} from \"./bonding-curves/CurveErrorCodes.sol\";\nimport {ERC1155Holder} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\n\n/// @title The base contract for an NFT/TOKEN AMM pair\n/// @author boredGenius and 0xmons\n/// @notice This implements the core swap logic from NFT to TOKEN\nabstract contract LSSVMPair is\n    OwnableWithTransferCallback,\n    ReentrancyGuard,\n    ERC1155Holder\n{\n    enum PoolType {\n        TOKEN,\n        NFT,\n        TRADE\n    }\n\n    // 90%, must <= 1 - MAX_PROTOCOL_FEE (set in LSSVMPairFactory)\n    uint256 internal constant MAX_FEE = 0.90e18;\n\n    // The current price of the NFT\n    // @dev This is generally used to mean the immediate sell price for the next marginal NFT.\n    // However, this should NOT be assumed, as future bonding curves may use spotPrice in different ways.\n    // Use getBuyNFTQuote and getSellNFTQuote for accurate pricing info.\n    uint128 public spotPrice;\n\n    // The parameter for the pair's bonding curve.\n    // Units and meaning are bonding curve dependent.\n    uint128 public delta;\n\n    // The spread between buy and sell prices, set to be a multiplier we apply to the buy price\n    // Fee is only relevant for TRADE pools\n    // Units are in base 1e18\n    uint96 public fee;\n\n    // If set to 0, NFTs/tokens sent by traders during trades will be sent to the pair.\n    // Otherwise, assets will be sent to the set address. Not available for TRADE pools.\n    address payable public assetRecipient;\n\n    // Events\n    event SwapNFTInPair();\n    event SwapNFTOutPair();\n    event SpotPriceUpdate(uint128 newSpotPrice);\n    event TokenDeposit(uint256 amount);\n    event TokenWithdrawal(uint256 amount);\n    event NFTWithdrawal();\n    event DeltaUpdate(uint128 newDelta);\n    event FeeUpdate(uint96 newFee);\n    event AssetRecipientChange(address a);\n\n    // Parameterized Errors\n    error BondingCurveError(CurveErrorCodes.Error error);\n\n    /**\n      @notice Called during pair creation to set initial parameters\n      @dev Only called once by factory to initialize.\n      We verify this by making sure that the current owner is address(0).\n      The Ownable library we use disallows setting the owner to be address(0), so this condition\n      should only be valid before the first initialize call.\n      @param _owner The owner of the pair\n      @param _assetRecipient The address that will receive the TOKEN or NFT sent to this pair during swaps. NOTE: If set to address(0), they will go to the pair itself.\n      @param _delta The initial delta of the bonding curve\n      @param _fee The initial % fee taken, if this is a trade pair\n      @param _spotPrice The initial price to sell an asset into the pair\n     */\n    function initialize(\n        address _owner,\n        address payable _assetRecipient,\n        uint128 _delta,\n        uint96 _fee,\n        uint128 _spotPrice\n    ) external payable {\n        require(owner() == address(0), \"Initialized\");\n        __Ownable_init(_owner);\n        __ReentrancyGuard_init();\n\n        ICurve _bondingCurve = bondingCurve();\n        PoolType _poolType = poolType();\n\n        if ((_poolType == PoolType.TOKEN) || (_poolType == PoolType.NFT)) {\n            require(_fee == 0, \"Only Trade Pools can have nonzero fee\");\n            assetRecipient = _assetRecipient;\n        } else if (_poolType == PoolType.TRADE) {\n            require(_fee < MAX_FEE, \"Trade fee must be less than 90%\");\n            require(\n                _assetRecipient == address(0),\n                \"Trade pools can't set asset recipient\"\n            );\n            fee = _fee;\n        }\n        require(_bondingCurve.validateDelta(_delta), \"Invalid delta for curve\");\n        require(\n            _bondingCurve.validateSpotPrice(_spotPrice),\n            \"Invalid new spot price for curve\"\n        );\n        delta = _delta;\n        spotPrice = _spotPrice;\n    }\n\n    /**\n     * External state-changing functions\n     */\n\n    /**\n        @notice Sends token to the pair in exchange for any `numNFTs` NFTs\n        @dev To compute the amount of token to send, call bondingCurve.getBuyInfo.\n        This swap function is meant for users who are ID agnostic\n        @param numNFTs The number of NFTs to purchase\n        @param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\n        amount is greater than this value, the transaction will be reverted.\n        @param nftRecipient The recipient of the NFTs\n        @param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\n        ETH pairs.\n        @param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\n        ETH pairs.\n        @return inputAmount The amount of token used for purchase\n     */\n    function swapTokenForAnyNFTs(\n        uint256 numNFTs,\n        uint256 maxExpectedTokenInput,\n        address nftRecipient,\n        bool isRouter,\n        address routerCaller\n    ) external payable virtual nonReentrant returns (uint256 inputAmount) {\n        // Store locally to remove extra calls\n        ILSSVMPairFactoryLike _factory = factory();\n        ICurve _bondingCurve = bondingCurve();\n        IERC721 _nft = nft();\n\n        // Input validation\n        {\n            PoolType _poolType = poolType();\n            require(\n                _poolType == PoolType.NFT || _poolType == PoolType.TRADE,\n                \"Wrong Pool type\"\n            );\n            require(\n                (numNFTs > 0) && (numNFTs <= _nft.balanceOf(address(this))),\n                \"Ask for > 0 and <= balanceOf NFTs\"\n            );\n        }\n\n        // Call bonding curve for pricing information\n        uint256 protocolFee;\n        (protocolFee, inputAmount) = _calculateBuyInfoAndUpdatePoolParams(\n            numNFTs,\n            maxExpectedTokenInput,\n            _bondingCurve,\n            _factory\n        );\n\n        _pullTokenInputAndPayProtocolFee(\n            inputAmount,\n            isRouter,\n            routerCaller,\n            _factory,\n            protocolFee\n        );\n\n        _sendAnyNFTsToRecipient(_nft, nftRecipient, numNFTs);\n\n        _refundTokenToSender(inputAmount);\n\n        emit SwapNFTOutPair();\n    }\n\n    /**\n        @notice Sends token to the pair in exchange for a specific set of NFTs\n        @dev To compute the amount of token to send, call bondingCurve.getBuyInfo\n        This swap is meant for users who want specific IDs. Also higher chance of\n        reverting if some of the specified IDs leave the pool before the swap goes through.\n        @param nftIds The list of IDs of the NFTs to purchase\n        @param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\n        amount is greater than this value, the transaction will be reverted.\n        @param nftRecipient The recipient of the NFTs\n        @param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\n        ETH pairs.\n        @param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\n        ETH pairs.\n        @return inputAmount The amount of token used for purchase\n     */\n    function swapTokenForSpecificNFTs(\n        uint256[] calldata nftIds,\n        uint256 maxExpectedTokenInput,\n        address nftRecipient,\n        bool isRouter,\n        address routerCaller\n    ) external payable virtual nonReentrant returns (uint256 inputAmount) {\n        // Store locally to remove extra calls\n        ILSSVMPairFactoryLike _factory = factory();\n        ICurve _bondingCurve = bondingCurve();\n\n        // Input validation\n        {\n            PoolType _poolType = poolType();\n            require(\n                _poolType == PoolType.NFT || _poolType == PoolType.TRADE,\n                \"Wrong Pool type\"\n            );\n            require((nftIds.length > 0), \"Must ask for > 0 NFTs\");\n        }\n\n        // Call bonding curve for pricing information\n        uint256 protocolFee;\n        (protocolFee, inputAmount) = _calculateBuyInfoAndUpdatePoolParams(\n            nftIds.length,\n            maxExpectedTokenInput,\n            _bondingCurve,\n            _factory\n        );\n\n        _pullTokenInputAndPayProtocolFee(\n            inputAmount,\n            isRouter,\n            routerCaller,\n            _factory,\n            protocolFee\n        );\n\n        _sendSpecificNFTsToRecipient(nft(), nftRecipient, nftIds);\n\n        _refundTokenToSender(inputAmount);\n\n        emit SwapNFTOutPair();\n    }\n\n    /**\n        @notice Sends a set of NFTs to the pair in exchange for token\n        @dev To compute the amount of token to that will be received, call bondingCurve.getSellInfo.\n        @param nftIds The list of IDs of the NFTs to sell to the pair\n        @param minExpectedTokenOutput The minimum acceptable token received by the sender. If the actual\n        amount is less than this value, the transaction will be reverted.\n        @param tokenRecipient The recipient of the token output\n        @param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\n        ETH pairs.\n        @param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\n        ETH pairs.\n        @return outputAmount The amount of token received\n     */\n    function swapNFTsForToken(\n        uint256[] calldata nftIds,\n        uint256 minExpectedTokenOutput,\n        address payable tokenRecipient,\n        bool isRouter,\n        address routerCaller\n    ) external virtual nonReentrant returns (uint256 outputAmount) {\n        // Store locally to remove extra calls\n        ILSSVMPairFactoryLike _factory = factory();\n        ICurve _bondingCurve = bondingCurve();\n\n        // Input validation\n        {\n            PoolType _poolType = poolType();\n            require(\n                _poolType == PoolType.TOKEN || _poolType == PoolType.TRADE,\n                \"Wrong Pool type\"\n            );\n            require(nftIds.length > 0, \"Must ask for > 0 NFTs\");\n        }\n\n        // Call bonding curve for pricing information\n        uint256 protocolFee;\n        (protocolFee, outputAmount) = _calculateSellInfoAndUpdatePoolParams(\n            nftIds.length,\n            minExpectedTokenOutput,\n            _bondingCurve,\n            _factory\n        );\n\n        _sendTokenOutput(tokenRecipient, outputAmount);\n\n        _payProtocolFeeFromPair(_factory, protocolFee);\n\n        _takeNFTsFromSender(nft(), nftIds, _factory, isRouter, routerCaller);\n\n        emit SwapNFTInPair();\n    }\n\n    /**\n     * View functions\n     */\n\n    /**\n        @dev Used as read function to query the bonding curve for buy pricing info\n        @param numNFTs The number of NFTs to buy from the pair\n     */\n    function getBuyNFTQuote(uint256 numNFTs)\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint256 newSpotPrice,\n            uint256 newDelta,\n            uint256 inputAmount,\n            uint256 protocolFee\n        )\n    {\n        (\n            error,\n            newSpotPrice,\n            newDelta,\n            inputAmount,\n            protocolFee\n        ) = bondingCurve().getBuyInfo(\n            spotPrice,\n            delta,\n            numNFTs,\n            fee,\n            factory().protocolFeeMultiplier()\n        );\n    }\n\n    /**\n        @dev Used as read function to query the bonding curve for sell pricing info\n        @param numNFTs The number of NFTs to sell to the pair\n     */\n    function getSellNFTQuote(uint256 numNFTs)\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint256 newSpotPrice,\n            uint256 newDelta,\n            uint256 outputAmount,\n            uint256 protocolFee\n        )\n    {\n        (\n            error,\n            newSpotPrice,\n            newDelta,\n            outputAmount,\n            protocolFee\n        ) = bondingCurve().getSellInfo(\n            spotPrice,\n            delta,\n            numNFTs,\n            fee,\n            factory().protocolFeeMultiplier()\n        );\n    }\n\n    /**\n        @notice Returns all NFT IDs held by the pool\n     */\n    function getAllHeldIds() external view virtual returns (uint256[] memory);\n\n    /**\n        @notice Returns the pair's variant (NFT is enumerable or not, pair uses ETH or ERC20)\n     */\n    function pairVariant()\n        public\n        pure\n        virtual\n        returns (ILSSVMPairFactoryLike.PairVariant);\n\n    function factory() public pure returns (ILSSVMPairFactoryLike _factory) {\n        uint256 paramsLength = _immutableParamsLength();\n        assembly {\n            _factory := shr(\n                0x60,\n                calldataload(sub(calldatasize(), paramsLength))\n            )\n        }\n    }\n\n    /**\n        @notice Returns the type of bonding curve that parameterizes the pair\n     */\n    function bondingCurve() public pure returns (ICurve _bondingCurve) {\n        uint256 paramsLength = _immutableParamsLength();\n        assembly {\n            _bondingCurve := shr(\n                0x60,\n                calldataload(add(sub(calldatasize(), paramsLength), 20))\n            )\n        }\n    }\n\n    /**\n        @notice Returns the NFT collection that parameterizes the pair\n     */\n    function nft() public pure returns (IERC721 _nft) {\n        uint256 paramsLength = _immutableParamsLength();\n        assembly {\n            _nft := shr(\n                0x60,\n                calldataload(add(sub(calldatasize(), paramsLength), 40))\n            )\n        }\n    }\n\n    /**\n        @notice Returns the pair's type (TOKEN/NFT/TRADE)\n     */\n    function poolType() public pure returns (PoolType _poolType) {\n        uint256 paramsLength = _immutableParamsLength();\n        assembly {\n            _poolType := shr(\n                0xf8,\n                calldataload(add(sub(calldatasize(), paramsLength), 60))\n            )\n        }\n    }\n\n    /**\n        @notice Returns the address that assets that receives assets when a swap is done with this pair\n        Can be set to another address by the owner, if set to address(0), defaults to the pair's own address\n     */\n    function getAssetRecipient()\n        public\n        view\n        returns (address payable _assetRecipient)\n    {\n        // If it's a TRADE pool, we know the recipient is 0 (TRADE pools can't set asset recipients)\n        // so just return address(this)\n        if (poolType() == PoolType.TRADE) {\n            return payable(address(this));\n        }\n\n        // Otherwise, we return the recipient if it's been set\n        // or replace it with address(this) if it's 0\n        _assetRecipient = assetRecipient;\n        if (_assetRecipient == address(0)) {\n            // Tokens will be transferred to address(this)\n            _assetRecipient = payable(address(this));\n        }\n    }\n\n    /**\n     * Internal functions\n     */\n\n    /**\n        @notice Calculates the amount needed to be sent into the pair for a buy and adjusts spot price or delta if necessary\n        @param numNFTs The amount of NFTs to purchase from the pair\n        @param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\n        amount is greater than this value, the transaction will be reverted.\n        @param protocolFee The percentage of protocol fee to be taken, as a percentage\n        @return protocolFee The amount of tokens to send as protocol fee\n        @return inputAmount The amount of tokens total tokens receive\n     */\n    function _calculateBuyInfoAndUpdatePoolParams(\n        uint256 numNFTs,\n        uint256 maxExpectedTokenInput,\n        ICurve _bondingCurve,\n        ILSSVMPairFactoryLike _factory\n    ) internal returns (uint256 protocolFee, uint256 inputAmount) {\n        CurveErrorCodes.Error error;\n        // Save on 2 SLOADs by caching\n        uint128 currentSpotPrice = spotPrice;\n        uint128 newSpotPrice;\n        uint128 currentDelta = delta;\n        uint128 newDelta;\n        (\n            error,\n            newSpotPrice,\n            newDelta,\n            inputAmount,\n            protocolFee\n        ) = _bondingCurve.getBuyInfo(\n            currentSpotPrice,\n            currentDelta,\n            numNFTs,\n            fee,\n            _factory.protocolFeeMultiplier()\n        );\n\n        // Revert if bonding curve had an error\n        if (error != CurveErrorCodes.Error.OK) {\n            revert BondingCurveError(error);\n        }\n\n        // Revert if input is more than expected\n        require(inputAmount <= maxExpectedTokenInput, \"In too many tokens\");\n\n        // Consolidate writes to save gas\n        if (currentSpotPrice != newSpotPrice || currentDelta != newDelta) {\n            spotPrice = newSpotPrice;\n            delta = newDelta;\n        }\n\n        // Emit spot price update if it has been updated\n        if (currentSpotPrice != newSpotPrice) {\n            emit SpotPriceUpdate(newSpotPrice);\n        }\n\n        // Emit delta update if it has been updated\n        if (currentDelta != newDelta) {\n            emit DeltaUpdate(newDelta);\n        }\n    }\n\n    /**\n        @notice Calculates the amount needed to be sent by the pair for a sell and adjusts spot price or delta if necessary\n        @param numNFTs The amount of NFTs to send to the the pair\n        @param minExpectedTokenOutput The minimum acceptable token received by the sender. If the actual\n        amount is less than this value, the transaction will be reverted.\n        @param protocolFee The percentage of protocol fee to be taken, as a percentage\n        @return protocolFee The amount of tokens to send as protocol fee\n        @return outputAmount The amount of tokens total tokens receive\n     */\n    function _calculateSellInfoAndUpdatePoolParams(\n        uint256 numNFTs,\n        uint256 minExpectedTokenOutput,\n        ICurve _bondingCurve,\n        ILSSVMPairFactoryLike _factory\n    ) internal returns (uint256 protocolFee, uint256 outputAmount) {\n        CurveErrorCodes.Error error;\n        // Save on 2 SLOADs by caching\n        uint128 currentSpotPrice = spotPrice;\n        uint128 newSpotPrice;\n        uint128 currentDelta = delta;\n        uint128 newDelta;\n        (\n            error,\n            newSpotPrice,\n            newDelta,\n            outputAmount,\n            protocolFee\n        ) = _bondingCurve.getSellInfo(\n            currentSpotPrice,\n            currentDelta,\n            numNFTs,\n            fee,\n            _factory.protocolFeeMultiplier()\n        );\n\n        // Revert if bonding curve had an error\n        if (error != CurveErrorCodes.Error.OK) {\n            revert BondingCurveError(error);\n        }\n\n        // Revert if output is too little\n        require(\n            outputAmount >= minExpectedTokenOutput,\n            \"Out too little tokens\"\n        );\n\n        // Consolidate writes to save gas\n        if (currentSpotPrice != newSpotPrice || currentDelta != newDelta) {\n            spotPrice = newSpotPrice;\n            delta = newDelta;\n        }\n\n        // Emit spot price update if it has been updated\n        if (currentSpotPrice != newSpotPrice) {\n            emit SpotPriceUpdate(newSpotPrice);\n        }\n\n        // Emit delta update if it has been updated\n        if (currentDelta != newDelta) {\n            emit DeltaUpdate(newDelta);\n        }\n    }\n\n    /**\n        @notice Pulls the token input of a trade from the trader and pays the protocol fee.\n        @param inputAmount The amount of tokens to be sent\n        @param isRouter Whether or not the caller is LSSVMRouter\n        @param routerCaller If called from LSSVMRouter, store the original caller\n        @param _factory The LSSVMPairFactory which stores LSSVMRouter allowlist info\n        @param protocolFee The protocol fee to be paid\n     */\n    function _pullTokenInputAndPayProtocolFee(\n        uint256 inputAmount,\n        bool isRouter,\n        address routerCaller,\n        ILSSVMPairFactoryLike _factory,\n        uint256 protocolFee\n    ) internal virtual;\n\n    /**\n        @notice Sends excess tokens back to the caller (if applicable)\n        @dev We send ETH back to the caller even when called from LSSVMRouter because we do an aggregate slippage check for certain bulk swaps. (Instead of sending directly back to the router caller)\n        Excess ETH sent for one swap can then be used to help pay for the next swap.\n     */\n    function _refundTokenToSender(uint256 inputAmount) internal virtual;\n\n    /**\n        @notice Sends protocol fee (if it exists) back to the LSSVMPairFactory from the pair\n     */\n    function _payProtocolFeeFromPair(\n        ILSSVMPairFactoryLike _factory,\n        uint256 protocolFee\n    ) internal virtual;\n\n    /**\n        @notice Sends tokens to a recipient\n        @param tokenRecipient The address receiving the tokens\n        @param outputAmount The amount of tokens to send\n     */\n    function _sendTokenOutput(\n        address payable tokenRecipient,\n        uint256 outputAmount\n    ) internal virtual;\n\n    /**\n        @notice Sends some number of NFTs to a recipient address, ID agnostic\n        @dev Even though we specify the NFT address here, this internal function is only\n        used to send NFTs associated with this specific pool.\n        @param _nft The address of the NFT to send\n        @param nftRecipient The receiving address for the NFTs\n        @param numNFTs The number of NFTs to send\n     */\n    function _sendAnyNFTsToRecipient(\n        IERC721 _nft,\n        address nftRecipient,\n        uint256 numNFTs\n    ) internal virtual;\n\n    /**\n        @notice Sends specific NFTs to a recipient address\n        @dev Even though we specify the NFT address here, this internal function is only\n        used to send NFTs associated with this specific pool.\n        @param _nft The address of the NFT to send\n        @param nftRecipient The receiving address for the NFTs\n        @param nftIds The specific IDs of NFTs to send\n     */\n    function _sendSpecificNFTsToRecipient(\n        IERC721 _nft,\n        address nftRecipient,\n        uint256[] calldata nftIds\n    ) internal virtual;\n\n    /**\n        @notice Takes NFTs from the caller and sends them into the pair's asset recipient\n        @dev This is used by the LSSVMPair's swapNFTForToken function.\n        @param _nft The NFT collection to take from\n        @param nftIds The specific NFT IDs to take\n        @param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\n        ETH pairs.\n        @param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\n        ETH pairs.\n     */\n    function _takeNFTsFromSender(\n        IERC721 _nft,\n        uint256[] calldata nftIds,\n        ILSSVMPairFactoryLike _factory,\n        bool isRouter,\n        address routerCaller\n    ) internal virtual {\n        {\n            address _assetRecipient = getAssetRecipient();\n            uint256 numNFTs = nftIds.length;\n\n            if (isRouter) {\n                // Verify if router is allowed\n                LSSVMRouter router = LSSVMRouter(payable(msg.sender));\n                (bool routerAllowed, ) = _factory.routerStatus(router);\n                require(routerAllowed, \"Not router\");\n\n                // Call router to pull NFTs\n                // If more than 1 NFT is being transfered, we can do a balance check instead of an ownership check, as pools are indifferent between NFTs from the same collection\n                if (numNFTs > 1) {\n                    uint256 beforeBalance = _nft.balanceOf(_assetRecipient);\n                    for (uint256 i = 0; i < numNFTs; ) {\n                        router.pairTransferNFTFrom(\n                            _nft,\n                            routerCaller,\n                            _assetRecipient,\n                            nftIds[i],\n                            pairVariant()\n                        );\n\n                        unchecked {\n                            ++i;\n                        }\n                    }\n                    require(\n                        (_nft.balanceOf(_assetRecipient) - beforeBalance) ==\n                            numNFTs,\n                        \"NFTs not transferred\"\n                    );\n                } else {\n                    router.pairTransferNFTFrom(\n                        _nft,\n                        routerCaller,\n                        _assetRecipient,\n                        nftIds[0],\n                        pairVariant()\n                    );\n                    require(\n                        _nft.ownerOf(nftIds[0]) == _assetRecipient,\n                        \"NFT not transferred\"\n                    );\n                }\n            } else {\n                // Pull NFTs directly from sender\n                for (uint256 i; i < numNFTs; ) {\n                    _nft.safeTransferFrom(\n                        msg.sender,\n                        _assetRecipient,\n                        nftIds[i]\n                    );\n\n                    unchecked {\n                        ++i;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n        @dev Used internally to grab pair parameters from calldata, see LSSVMPairCloner for technical details\n     */\n    function _immutableParamsLength() internal pure virtual returns (uint256);\n\n    /**\n     * Owner functions\n     */\n\n    /**\n        @notice Rescues a specified set of NFTs owned by the pair to the owner address. (onlyOwnable modifier is in the implemented function)\n        @dev If the NFT is the pair's collection, we also remove it from the id tracking (if the NFT is missing enumerable).\n        @param a The NFT to transfer\n        @param nftIds The list of IDs of the NFTs to send to the owner\n     */\n    function withdrawERC721(IERC721 a, uint256[] calldata nftIds)\n        external\n        virtual;\n\n    /**\n        @notice Rescues ERC20 tokens from the pair to the owner. Only callable by the owner (onlyOwnable modifier is in the implemented function).\n        @param a The token to transfer\n        @param amount The amount of tokens to send to the owner\n     */\n    function withdrawERC20(ERC20 a, uint256 amount) external virtual;\n\n    /**\n        @notice Rescues ERC1155 tokens from the pair to the owner. Only callable by the owner.\n        @param a The NFT to transfer\n        @param ids The NFT ids to transfer\n        @param amounts The amounts of each id to transfer\n     */\n    function withdrawERC1155(\n        IERC1155 a,\n        uint256[] calldata ids,\n        uint256[] calldata amounts\n    ) external onlyOwner {\n        a.safeBatchTransferFrom(address(this), msg.sender, ids, amounts, \"\");\n    }\n\n    /**\n        @notice Updates the selling spot price. Only callable by the owner.\n        @param newSpotPrice The new selling spot price value, in Token\n     */\n    function changeSpotPrice(uint128 newSpotPrice) external onlyOwner {\n        ICurve _bondingCurve = bondingCurve();\n        require(\n            _bondingCurve.validateSpotPrice(newSpotPrice),\n            \"Invalid new spot price for curve\"\n        );\n        if (spotPrice != newSpotPrice) {\n            spotPrice = newSpotPrice;\n            emit SpotPriceUpdate(newSpotPrice);\n        }\n    }\n\n    /**\n        @notice Updates the delta parameter. Only callable by the owner.\n        @param newDelta The new delta parameter\n     */\n    function changeDelta(uint128 newDelta) external onlyOwner {\n        ICurve _bondingCurve = bondingCurve();\n        require(\n            _bondingCurve.validateDelta(newDelta),\n            \"Invalid delta for curve\"\n        );\n        if (delta != newDelta) {\n            delta = newDelta;\n            emit DeltaUpdate(newDelta);\n        }\n    }\n\n    /**\n        @notice Updates the fee taken by the LP. Only callable by the owner.\n        Only callable if the pool is a Trade pool. Reverts if the fee is >=\n        MAX_FEE.\n        @param newFee The new LP fee percentage, 18 decimals\n     */\n    function changeFee(uint96 newFee) external onlyOwner {\n        PoolType _poolType = poolType();\n        require(_poolType == PoolType.TRADE, \"Only for Trade pools\");\n        require(newFee < MAX_FEE, \"Trade fee must be less than 90%\");\n        if (fee != newFee) {\n            fee = newFee;\n            emit FeeUpdate(newFee);\n        }\n    }\n\n    /**\n        @notice Changes the address that will receive assets received from\n        trades. Only callable by the owner.\n        @param newRecipient The new asset recipient\n     */\n    function changeAssetRecipient(address payable newRecipient)\n        external\n        onlyOwner\n    {\n        PoolType _poolType = poolType();\n        require(_poolType != PoolType.TRADE, \"Not for Trade pools\");\n        if (assetRecipient != newRecipient) {\n            assetRecipient = newRecipient;\n            emit AssetRecipientChange(newRecipient);\n        }\n    }\n\n    /**\n        @notice Allows the pair to make arbitrary external calls to contracts\n        whitelisted by the protocol. Only callable by the owner.\n        @param target The contract to call\n        @param data The calldata to pass to the contract\n     */\n    function call(address payable target, bytes calldata data)\n        external\n        onlyOwner\n    {\n        ILSSVMPairFactoryLike _factory = factory();\n        require(_factory.callAllowed(target), \"Target must be whitelisted\");\n        (bool result, ) = target.call{value: 0}(data);\n        require(result, \"Call failed\");\n    }\n\n    /**\n        @notice Allows owner to batch multiple calls, forked from: https://github.com/boringcrypto/BoringSolidity/blob/master/contracts/BoringBatchable.sol\n        @dev Intended for withdrawing/altering pool pricing in one tx, only callable by owner, cannot change owner\n        @param calls The calldata for each call to make\n        @param revertOnFail Whether or not to revert the entire tx if any of the calls fail\n     */\n    function multicall(bytes[] calldata calls, bool revertOnFail)\n        external\n        onlyOwner\n    {\n        for (uint256 i; i < calls.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                calls[i]\n            );\n            if (!success && revertOnFail) {\n                revert(_getRevertMsg(result));\n            }\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Prevent multicall from malicious frontend sneaking in ownership change\n        require(\n            owner() == msg.sender,\n            \"Ownership cannot be changed in multicall\"\n        );\n    }\n\n    /**\n      @param _returnData The data returned from a multicall result\n      @dev Used to grab the revert string from the underlying call\n     */\n    function _getRevertMsg(bytes memory _returnData)\n        internal\n        pure\n        returns (string memory)\n    {\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            // Slice the sighash.\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\n    }\n}\n",
  "sourcePath": "/Users/brett/workSpace/NFTSea/nftsea-contract/contracts/LSSVMPair.sol",
  "ast": {
    "absolutePath": "project:/contracts/LSSVMPair.sol",
    "exportedSymbols": {
      "CurveErrorCodes": [
        7963
      ],
      "ERC1155Holder": [
        326
      ],
      "ERC20": [
        9316
      ],
      "ICurve": [
        8375
      ],
      "IERC1155": [
        234
      ],
      "IERC721": [
        476
      ],
      "ILSSVMPairFactoryLike": [
        1700
      ],
      "LSSVMPair": [
        3162
      ],
      "LSSVMRouter": [
        7332
      ],
      "OwnableWithTransferCallback": [
        8883
      ],
      "ReentrancyGuard": [
        8923
      ]
    },
    "id": 3163,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1702,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:14"
      },
      {
        "absolutePath": "project:/contracts/tokens/ERC20.sol",
        "file": "./tokens/ERC20.sol",
        "id": 1704,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 9317,
        "src": "62:41:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1703,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9316,
              "src": "70:5:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 1706,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 477,
        "src": "104:73:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1705,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 476,
              "src": "112:7:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 1708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 235,
        "src": "178:76:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1707,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 234,
              "src": "186:8:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/OwnableWithTransferCallback.sol",
        "file": "./lib/OwnableWithTransferCallback.sol",
        "id": 1710,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 8884,
        "src": "255:82:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1709,
              "name": "OwnableWithTransferCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8883,
              "src": "263:27:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/ReentrancyGuard.sol",
        "file": "./lib/ReentrancyGuard.sol",
        "id": 1712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 8924,
        "src": "338:58:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1711,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8923,
              "src": "346:15:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/bonding-curves/ICurve.sol",
        "file": "./bonding-curves/ICurve.sol",
        "id": 1714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 8376,
        "src": "397:51:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1713,
              "name": "ICurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8375,
              "src": "405:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/LSSVMRouter.sol",
        "file": "./LSSVMRouter.sol",
        "id": 1716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 7333,
        "src": "449:46:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1715,
              "name": "LSSVMRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7332,
              "src": "457:11:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ILSSVMPairFactoryLike.sol",
        "file": "./ILSSVMPairFactoryLike.sol",
        "id": 1718,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 1701,
        "src": "496:66:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1717,
              "name": "ILSSVMPairFactoryLike",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1700,
              "src": "504:21:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/bonding-curves/CurveErrorCodes.sol",
        "file": "./bonding-curves/CurveErrorCodes.sol",
        "id": 1720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 7964,
        "src": "563:69:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1719,
              "name": "CurveErrorCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7963,
              "src": "571:15:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 1722,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3163,
        "sourceUnit": 327,
        "src": "633:92:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1721,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 326,
              "src": "641:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1724,
              "name": "OwnableWithTransferCallback",
              "nameLocations": [
                "918:27:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8883,
              "src": "918:27:14"
            },
            "id": 1725,
            "nodeType": "InheritanceSpecifier",
            "src": "918:27:14"
          },
          {
            "baseName": {
              "id": 1726,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "951:15:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8923,
              "src": "951:15:14"
            },
            "id": 1727,
            "nodeType": "InheritanceSpecifier",
            "src": "951:15:14"
          },
          {
            "baseName": {
              "id": 1728,
              "name": "ERC1155Holder",
              "nameLocations": [
                "972:13:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 326,
              "src": "972:13:14"
            },
            "id": 1729,
            "nodeType": "InheritanceSpecifier",
            "src": "972:13:14"
          }
        ],
        "canonicalName": "LSSVMPair",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1723,
          "nodeType": "StructuredDocumentation",
          "src": "727:156:14",
          "text": "@title The base contract for an NFT/TOKEN AMM pair\n @author boredGenius and 0xmons\n @notice This implements the core swap logic from NFT to TOKEN"
        },
        "fullyImplemented": false,
        "id": 3162,
        "linearizedBaseContracts": [
          3162,
          326,
          360,
          275,
          848,
          1054,
          8923,
          8883
        ],
        "name": "LSSVMPair",
        "nameLocation": "901:9:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LSSVMPair.PoolType",
            "id": 1733,
            "members": [
              {
                "id": 1730,
                "name": "TOKEN",
                "nameLocation": "1016:5:14",
                "nodeType": "EnumValue",
                "src": "1016:5:14"
              },
              {
                "id": 1731,
                "name": "NFT",
                "nameLocation": "1031:3:14",
                "nodeType": "EnumValue",
                "src": "1031:3:14"
              },
              {
                "id": 1732,
                "name": "TRADE",
                "nameLocation": "1044:5:14",
                "nodeType": "EnumValue",
                "src": "1044:5:14"
              }
            ],
            "name": "PoolType",
            "nameLocation": "997:8:14",
            "nodeType": "EnumDefinition",
            "src": "992:63:14"
          },
          {
            "constant": true,
            "id": 1736,
            "mutability": "constant",
            "name": "MAX_FEE",
            "nameLocation": "1154:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 3162,
            "src": "1128:43:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1734,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3930653138",
              "id": 1735,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1164:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_900000000000000000_by_1",
                "typeString": "int_const 900000000000000000"
              },
              "value": "0.90e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "398482d8",
            "id": 1738,
            "mutability": "mutable",
            "name": "spotPrice",
            "nameLocation": "1503:9:14",
            "nodeType": "VariableDeclaration",
            "scope": 3162,
            "src": "1488:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 1737,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1488:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "12b495a8",
            "id": 1740,
            "mutability": "mutable",
            "name": "delta",
            "nameLocation": "1639:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 3162,
            "src": "1624:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 1739,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1624:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1742,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "1835:3:14",
            "nodeType": "VariableDeclaration",
            "scope": 3162,
            "src": "1821:17:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 1741,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "1821:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3bfa67fe",
            "id": 1744,
            "mutability": "mutable",
            "name": "assetRecipient",
            "nameLocation": "2045:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 3162,
            "src": "2022:37:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1743,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2022:15:14",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3614eb567740a0ee3897c0e2b11ad6a5720d2e4438f9c8accf6c95c24af3a470",
            "id": 1746,
            "name": "SwapNFTInPair",
            "nameLocation": "2086:13:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:14"
            },
            "src": "2080:22:14"
          },
          {
            "anonymous": false,
            "eventSelector": "bc479dfc6cb9c1a9d880f987ee4b30fa43dd7f06aec121db685b67d587c93c93",
            "id": 1748,
            "name": "SwapNFTOutPair",
            "nameLocation": "2113:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:14"
            },
            "src": "2107:23:14"
          },
          {
            "anonymous": false,
            "eventSelector": "f06180fdbe95e5193df4dcd1352726b1f04cb58599ce58552cc952447af2ffbb",
            "id": 1752,
            "name": "SpotPriceUpdate",
            "nameLocation": "2141:15:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1750,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "2165:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "2157:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:22:14"
            },
            "src": "2135:44:14"
          },
          {
            "anonymous": false,
            "eventSelector": "f1b3be8dace0fecfbdb6fb0fa1cc014c612bcb1b46db027c1ece5fc11fff09d6",
            "id": 1756,
            "name": "TokenDeposit",
            "nameLocation": "2190:12:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2211:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "2203:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2202:16:14"
            },
            "src": "2184:35:14"
          },
          {
            "anonymous": false,
            "eventSelector": "0e266e8f38544aa1480d73762386eb10df55b1b8453d935762e891c44b69a1e6",
            "id": 1760,
            "name": "TokenWithdrawal",
            "nameLocation": "2230:15:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1758,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2254:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "2246:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:16:14"
            },
            "src": "2224:38:14"
          },
          {
            "anonymous": false,
            "eventSelector": "242b9b8fb5c0e6298454fcf80a0fbcbb7308620133d92b50091a1f64cee790e8",
            "id": 1762,
            "name": "NFTWithdrawal",
            "nameLocation": "2273:13:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2286:2:14"
            },
            "src": "2267:22:14"
          },
          {
            "anonymous": false,
            "eventSelector": "c958ae052d28f8d17bc2c4ddbabb699a3cab5cccefd034d0fc971efdadc01da5",
            "id": 1766,
            "name": "DeltaUpdate",
            "nameLocation": "2300:11:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1764,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "2320:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "2312:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1763,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2311:18:14"
            },
            "src": "2294:36:14"
          },
          {
            "anonymous": false,
            "eventSelector": "66c55c30868c51e7ad52e3d85d1403576a9967614e67c48e25b55a10baa650c0",
            "id": 1770,
            "name": "FeeUpdate",
            "nameLocation": "2341:9:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nameLocation": "2358:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "2351:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:15:14"
            },
            "src": "2335:31:14"
          },
          {
            "anonymous": false,
            "eventSelector": "678f61dcdee86474eddea0407caf8f1f5130382a90dedabaef94906ed86a27b4",
            "id": 1774,
            "name": "AssetRecipientChange",
            "nameLocation": "2377:20:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "2406:1:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "2398:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2397:11:14"
            },
            "src": "2371:38:14"
          },
          {
            "errorSelector": "e4f2c5ac",
            "id": 1779,
            "name": "BondingCurveError",
            "nameLocation": "2449:17:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "2489:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "2467:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$7962",
                    "typeString": "enum CurveErrorCodes.Error"
                  },
                  "typeName": {
                    "id": 1776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1775,
                      "name": "CurveErrorCodes.Error",
                      "nameLocations": [
                        "2467:15:14",
                        "2483:5:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7962,
                      "src": "2467:21:14"
                    },
                    "referencedDeclaration": 7962,
                    "src": "2467:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:29:14"
            },
            "src": "2443:53:14"
          },
          {
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "3463:977:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1794,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8810,
                            "src": "3481:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3481:7:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3500:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3492:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1796,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3492:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3492:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3481:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e697469616c697a6564",
                        "id": 1801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3504:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2a9b5158cff4d129f58e3e9cb6a13e2414f0ef74f94537777267284c43bba3b",
                          "typeString": "literal_string \"Initialized\""
                        },
                        "value": "Initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2a9b5158cff4d129f58e3e9cb6a13e2414f0ef74f94537777267284c43bba3b",
                          "typeString": "literal_string \"Initialized\""
                        }
                      ],
                      "id": 1793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3473:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1803,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:45:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1805,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "3543:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1804,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8801,
                      "src": "3528:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:22:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1808,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8902,
                      "src": "3560:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1810,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:24:14"
                },
                {
                  "assignments": [
                    1813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1813,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "3602:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1898,
                      "src": "3595:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 1812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1811,
                          "name": "ICurve",
                          "nameLocations": [
                            "3595:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "3595:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "3595:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1816,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1814,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "3618:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3595:37:14"
                },
                {
                  "assignments": [
                    1819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1819,
                      "mutability": "mutable",
                      "name": "_poolType",
                      "nameLocation": "3651:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1898,
                      "src": "3642:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      },
                      "typeName": {
                        "id": 1818,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1817,
                          "name": "PoolType",
                          "nameLocations": [
                            "3642:8:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1733,
                          "src": "3642:8:14"
                        },
                        "referencedDeclaration": 1733,
                        "src": "3642:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1822,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1820,
                      "name": "poolType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "3663:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                        "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                      }
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:10:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$1733",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3642:31:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          },
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1823,
                            "name": "_poolType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1819,
                            "src": "3689:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1824,
                              "name": "PoolType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1733,
                              "src": "3702:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                "typeString": "type(enum LSSVMPair.PoolType)"
                              }
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3711:5:14",
                            "memberName": "TOKEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1730,
                            "src": "3702:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "src": "3689:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1827,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3688:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1828,
                            "name": "_poolType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1819,
                            "src": "3722:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1829,
                              "name": "PoolType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1733,
                              "src": "3735:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                "typeString": "type(enum LSSVMPair.PoolType)"
                              }
                            },
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3744:3:14",
                            "memberName": "NFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1731,
                            "src": "3735:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "src": "3722:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1832,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3721:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3688:60:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      },
                      "id": 1849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1846,
                        "name": "_poolType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1819,
                        "src": "3890:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1847,
                          "name": "PoolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1733,
                          "src": "3903:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                            "typeString": "type(enum LSSVMPair.PoolType)"
                          }
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3912:5:14",
                        "memberName": "TRADE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3903:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "src": "3890:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1872,
                    "nodeType": "IfStatement",
                    "src": "3886:279:14",
                    "trueBody": {
                      "id": 1871,
                      "nodeType": "Block",
                      "src": "3919:246:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1851,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1788,
                                  "src": "3941:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1852,
                                  "name": "MAX_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "3948:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3941:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "547261646520666565206d757374206265206c657373207468616e20393025",
                                "id": 1854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3957:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7b38e190e098231753f4df9a78e27c786bb732780846d9c95b69ec1aa4f0b620",
                                  "typeString": "literal_string \"Trade fee must be less than 90%\""
                                },
                                "value": "Trade fee must be less than 90%"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7b38e190e098231753f4df9a78e27c786bb732780846d9c95b69ec1aa4f0b620",
                                  "typeString": "literal_string \"Trade fee must be less than 90%\""
                                }
                              ],
                              "id": 1850,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "3933:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3933:58:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1856,
                          "nodeType": "ExpressionStatement",
                          "src": "3933:58:14"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1858,
                                  "name": "_assetRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "4030:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1861,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4057:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1860,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4049:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1859,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4049:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4049:10:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4030:29:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "547261646520706f6f6c732063616e27742073657420617373657420726563697069656e74",
                                "id": 1864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4077:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_88fe7a62c51ba96002eea5b405a1bf2dc36888c2063de174f7da57773ed82d8a",
                                  "typeString": "literal_string \"Trade pools can't set asset recipient\""
                                },
                                "value": "Trade pools can't set asset recipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_88fe7a62c51ba96002eea5b405a1bf2dc36888c2063de174f7da57773ed82d8a",
                                  "typeString": "literal_string \"Trade pools can't set asset recipient\""
                                }
                              ],
                              "id": 1857,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "4005:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4005:125:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1866,
                          "nodeType": "ExpressionStatement",
                          "src": "4005:125:14"
                        },
                        {
                          "expression": {
                            "id": 1869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1867,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "4144:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1868,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1788,
                              "src": "4150:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "4144:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "id": 1870,
                          "nodeType": "ExpressionStatement",
                          "src": "4144:10:14"
                        }
                      ]
                    }
                  },
                  "id": 1873,
                  "nodeType": "IfStatement",
                  "src": "3684:481:14",
                  "trueBody": {
                    "id": 1845,
                    "nodeType": "Block",
                    "src": "3750:130:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 1837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1835,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1788,
                                "src": "3772:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3780:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3772:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920547261646520506f6f6c732063616e2068617665206e6f6e7a65726f20666565",
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3783:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d72363aab7e23959a9dd78fa48052389a4616e4df703f19cda595df79c9cd29",
                                "typeString": "literal_string \"Only Trade Pools can have nonzero fee\""
                              },
                              "value": "Only Trade Pools can have nonzero fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d72363aab7e23959a9dd78fa48052389a4616e4df703f19cda595df79c9cd29",
                                "typeString": "literal_string \"Only Trade Pools can have nonzero fee\""
                              }
                            ],
                            "id": 1834,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3764:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3764:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1840,
                        "nodeType": "ExpressionStatement",
                        "src": "3764:59:14"
                      },
                      {
                        "expression": {
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1841,
                            "name": "assetRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "3837:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1842,
                            "name": "_assetRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "3854:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3837:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1844,
                        "nodeType": "ExpressionStatement",
                        "src": "3837:32:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1877,
                            "name": "_delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "4210:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 1875,
                            "name": "_bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "4182:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurve_$8375",
                              "typeString": "contract ICurve"
                            }
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4196:13:14",
                          "memberName": "validateDelta",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8316,
                          "src": "4182:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint128_$returns$_t_bool_$",
                            "typeString": "function (uint128) pure external returns (bool)"
                          }
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4182:35:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642064656c746120666f72206375727665",
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4219:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be62fed5036353946bfcc1640c08eb0c3130f96f4239063f431da5521ff9c07d",
                          "typeString": "literal_string \"Invalid delta for curve\""
                        },
                        "value": "Invalid delta for curve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be62fed5036353946bfcc1640c08eb0c3130f96f4239063f431da5521ff9c07d",
                          "typeString": "literal_string \"Invalid delta for curve\""
                        }
                      ],
                      "id": 1874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4174:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4174:71:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "4174:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1885,
                            "name": "_spotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "4308:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 1883,
                            "name": "_bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "4276:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurve_$8375",
                              "typeString": "contract ICurve"
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4290:17:14",
                          "memberName": "validateSpotPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8324,
                          "src": "4276:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint128_$returns$_t_bool_$",
                            "typeString": "function (uint128) view external returns (bool)"
                          }
                        },
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4276:43:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e65772073706f7420707269636520666f72206375727665",
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4333:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d4df328f9c7dabb1ef0dac25883e3f9f5e04a8f053c6c4e853c5cf0e9034ae",
                          "typeString": "literal_string \"Invalid new spot price for curve\""
                        },
                        "value": "Invalid new spot price for curve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d4df328f9c7dabb1ef0dac25883e3f9f5e04a8f053c6c4e853c5cf0e9034ae",
                          "typeString": "literal_string \"Invalid new spot price for curve\""
                        }
                      ],
                      "id": 1882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4255:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4255:122:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1889,
                  "nodeType": "ExpressionStatement",
                  "src": "4255:122:14"
                },
                {
                  "expression": {
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1890,
                      "name": "delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "4387:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1891,
                      "name": "_delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "4395:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4387:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1893,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:14:14"
                },
                {
                  "expression": {
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1894,
                      "name": "spotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "4411:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1895,
                      "name": "_spotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1790,
                      "src": "4423:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4411:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:22:14"
                }
              ]
            },
            "documentation": {
              "id": 1780,
              "nodeType": "StructuredDocumentation",
              "src": "2502:775:14",
              "text": "@notice Called during pair creation to set initial parameters\n@dev Only called once by factory to initialize.\nWe verify this by making sure that the current owner is address(0).\nThe Ownable library we use disallows setting the owner to be address(0), so this condition\nshould only be valid before the first initialize call.\n@param _owner The owner of the pair\n@param _assetRecipient The address that will receive the TOKEN or NFT sent to this pair during swaps. NOTE: If set to address(0), they will go to the pair itself.\n@param _delta The initial delta of the bonding curve\n@param _fee The initial % fee taken, if this is a trade pair\n@param _spotPrice The initial price to sell an asset into the pair"
            },
            "functionSelector": "fd17aef9",
            "id": 1899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "3291:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3319:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3311:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "3351:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3335:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "3384:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3376:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1785,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "3407:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3400:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "3429:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "3421:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3421:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3301:144:14"
            },
            "returnParameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3463:0:14"
            },
            "scope": 3162,
            "src": "3282:1158:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "5581:1172:14",
              "statements": [
                {
                  "assignments": [
                    1919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1919,
                      "mutability": "mutable",
                      "name": "_factory",
                      "nameLocation": "5660:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "5638:30:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                        "typeString": "contract ILSSVMPairFactoryLike"
                      },
                      "typeName": {
                        "id": 1918,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1917,
                          "name": "ILSSVMPairFactoryLike",
                          "nameLocations": [
                            "5638:21:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1700,
                          "src": "5638:21:14"
                        },
                        "referencedDeclaration": 1700,
                        "src": "5638:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1920,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "5671:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                        "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:9:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5638:42:14"
                },
                {
                  "assignments": [
                    1925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1925,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "5697:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "5690:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 1924,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1923,
                          "name": "ICurve",
                          "nameLocations": [
                            "5690:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "5690:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "5690:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1928,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1926,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "5713:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5713:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5690:37:14"
                },
                {
                  "assignments": [
                    1931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1931,
                      "mutability": "mutable",
                      "name": "_nft",
                      "nameLocation": "5745:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "5737:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$476",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 1930,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1929,
                          "name": "IERC721",
                          "nameLocations": [
                            "5737:7:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 476,
                          "src": "5737:7:14"
                        },
                        "referencedDeclaration": 476,
                        "src": "5737:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1934,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1932,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2336,
                      "src": "5752:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IERC721_$476_$",
                        "typeString": "function () pure returns (contract IERC721)"
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5752:5:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5737:20:14"
                },
                {
                  "id": 1973,
                  "nodeType": "Block",
                  "src": "5796:365:14",
                  "statements": [
                    {
                      "assignments": [
                        1937
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1937,
                          "mutability": "mutable",
                          "name": "_poolType",
                          "nameLocation": "5819:9:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 1973,
                          "src": "5810:18:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          },
                          "typeName": {
                            "id": 1936,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1935,
                              "name": "PoolType",
                              "nameLocations": [
                                "5810:8:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1733,
                              "src": "5810:8:14"
                            },
                            "referencedDeclaration": 1733,
                            "src": "5810:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1940,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1938,
                          "name": "poolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2350,
                          "src": "5831:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                            "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                          }
                        },
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5831:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5810:31:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 1945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1942,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1937,
                                "src": "5880:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1943,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "5893:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 1944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5902:3:14",
                                "memberName": "NFT",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1731,
                                "src": "5893:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "5880:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 1949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1946,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1937,
                                "src": "5909:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1947,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "5922:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 1948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5931:5:14",
                                "memberName": "TRADE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1732,
                                "src": "5922:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "5909:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5880:56:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "57726f6e6720506f6f6c2074797065",
                            "id": 1951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5954:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            },
                            "value": "Wrong Pool type"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            }
                          ],
                          "id": 1941,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "5855:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5855:130:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1953,
                      "nodeType": "ExpressionStatement",
                      "src": "5855:130:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1955,
                                    "name": "numNFTs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1902,
                                    "src": "6025:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6035:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6025:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1958,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6024:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1959,
                                    "name": "numNFTs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1902,
                                    "src": "6042:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1964,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "6076:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                              "typeString": "contract LSSVMPair"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                              "typeString": "contract LSSVMPair"
                                            }
                                          ],
                                          "id": 1963,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6068:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1962,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6068:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1965,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6068:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1960,
                                        "name": "_nft",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1931,
                                        "src": "6053:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$476",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      "id": 1961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6058:9:14",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 401,
                                      "src": "6053:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 1966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6053:29:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6042:40:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1968,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6041:42:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6024:59:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "41736b20666f72203e203020616e64203c3d2062616c616e63654f66204e465473",
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6101:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bacd6614bee3887dcb6d74b152057ea852f501f7c92f82f0d697557f19456c2d",
                              "typeString": "literal_string \"Ask for > 0 and <= balanceOf NFTs\""
                            },
                            "value": "Ask for > 0 and <= balanceOf NFTs"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_bacd6614bee3887dcb6d74b152057ea852f501f7c92f82f0d697557f19456c2d",
                              "typeString": "literal_string \"Ask for > 0 and <= balanceOf NFTs\""
                            }
                          ],
                          "id": 1954,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "5999:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5999:151:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1972,
                      "nodeType": "ExpressionStatement",
                      "src": "5999:151:14"
                    }
                  ]
                },
                {
                  "assignments": [
                    1975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1975,
                      "mutability": "mutable",
                      "name": "protocolFee",
                      "nameLocation": "6233:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "6225:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1974,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6225:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1976,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6225:19:14"
                },
                {
                  "expression": {
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1977,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "6255:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1978,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1915,
                          "src": "6268:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1979,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6254:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1981,
                          "name": "numNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1902,
                          "src": "6333:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1982,
                          "name": "maxExpectedTokenInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "6354:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1983,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "6389:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        {
                          "id": 1984,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "6416:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          },
                          {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        ],
                        "id": 1980,
                        "name": "_calculateBuyInfoAndUpdatePoolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "6283:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_ICurve_$8375_$_t_contract$_ILSSVMPairFactoryLike_$1700_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,contract ICurve,contract ILSSVMPairFactoryLike) returns (uint256,uint256)"
                        }
                      },
                      "id": 1985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6283:151:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "6254:180:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:180:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1989,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1915,
                        "src": "6491:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1990,
                        "name": "isRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1908,
                        "src": "6516:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1991,
                        "name": "routerCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "6538:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1992,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "6564:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      {
                        "id": 1993,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "6586:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1988,
                      "name": "_pullTokenInputAndPayProtocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2629,
                      "src": "6445:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$1700_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bool,address,contract ILSSVMPairFactoryLike,uint256)"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6445:162:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "6445:162:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1997,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1931,
                        "src": "6642:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 1998,
                        "name": "nftRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1906,
                        "src": "6648:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1999,
                        "name": "numNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "6662:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1996,
                      "name": "_sendAnyNFTsToRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2663,
                      "src": "6618:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC721_$476_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC721,address,uint256)"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6618:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "6618:52:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2003,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1915,
                        "src": "6702:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2002,
                      "name": "_refundTokenToSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "6681:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6681:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2005,
                  "nodeType": "ExpressionStatement",
                  "src": "6681:33:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2006,
                      "name": "SwapNFTOutPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1748,
                      "src": "6730:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6730:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "EmitStatement",
                  "src": "6725:21:14"
                }
              ]
            },
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "4504:822:14",
              "text": "@notice Sends token to the pair in exchange for any `numNFTs` NFTs\n@dev To compute the amount of token to send, call bondingCurve.getBuyInfo.\nThis swap function is meant for users who are ID agnostic\n@param numNFTs The number of NFTs to purchase\n@param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\namount is greater than this value, the transaction will be reverted.\n@param nftRecipient The recipient of the NFTs\n@param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\nETH pairs.\n@param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\nETH pairs.\n@return inputAmount The amount of token used for purchase"
            },
            "functionSelector": "28b8aee1",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1912,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5538:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8922,
                  "src": "5538:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5538:12:14"
              }
            ],
            "name": "swapTokenForAnyNFTs",
            "nameLocation": "5340:19:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "5377:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5369:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "maxExpectedTokenInput",
                  "nameLocation": "5402:21:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5394:29:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "nftRecipient",
                  "nameLocation": "5441:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5433:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5433:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "isRouter",
                  "nameLocation": "5468:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5463:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "routerCaller",
                  "nameLocation": "5494:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5486:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5486:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5359:153:14"
            },
            "returnParameters": {
              "id": 1916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1915,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "5568:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "5560:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5559:21:14"
            },
            "scope": 3162,
            "src": "5331:1422:14",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2107,
              "nodeType": "Block",
              "src": "7970:1055:14",
              "statements": [
                {
                  "assignments": [
                    2031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2031,
                      "mutability": "mutable",
                      "name": "_factory",
                      "nameLocation": "8049:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2107,
                      "src": "8027:30:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                        "typeString": "contract ILSSVMPairFactoryLike"
                      },
                      "typeName": {
                        "id": 2030,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2029,
                          "name": "ILSSVMPairFactoryLike",
                          "nameLocations": [
                            "8027:21:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1700,
                          "src": "8027:21:14"
                        },
                        "referencedDeclaration": 1700,
                        "src": "8027:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2032,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "8060:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                        "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8060:9:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8027:42:14"
                },
                {
                  "assignments": [
                    2037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "8086:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2107,
                      "src": "8079:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 2036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2035,
                          "name": "ICurve",
                          "nameLocations": [
                            "8079:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "8079:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "8079:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2040,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2038,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "8102:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8102:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8079:37:14"
                },
                {
                  "id": 2069,
                  "nodeType": "Block",
                  "src": "8155:267:14",
                  "statements": [
                    {
                      "assignments": [
                        2043
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2043,
                          "mutability": "mutable",
                          "name": "_poolType",
                          "nameLocation": "8178:9:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 2069,
                          "src": "8169:18:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          },
                          "typeName": {
                            "id": 2042,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2041,
                              "name": "PoolType",
                              "nameLocations": [
                                "8169:8:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1733,
                              "src": "8169:8:14"
                            },
                            "referencedDeclaration": 1733,
                            "src": "8169:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2046,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2044,
                          "name": "poolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2350,
                          "src": "8190:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                            "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                          }
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8190:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8169:31:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 2051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2048,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "8239:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2049,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "8252:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8261:3:14",
                                "memberName": "NFT",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1731,
                                "src": "8252:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "8239:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 2055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2052,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "8268:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2053,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "8281:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8290:5:14",
                                "memberName": "TRADE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1732,
                                "src": "8281:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "8268:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8239:56:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "57726f6e6720506f6f6c2074797065",
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8313:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            },
                            "value": "Wrong Pool type"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            }
                          ],
                          "id": 2047,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "8214:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8214:130:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2059,
                      "nodeType": "ExpressionStatement",
                      "src": "8214:130:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2061,
                                    "name": "nftIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2014,
                                    "src": "8367:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 2062,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8374:6:14",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "8367:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8383:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8367:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2065,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8366:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d7573742061736b20666f72203e2030204e465473",
                            "id": 2066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8387:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8c99ee3c92ef48e7b8630a53a6cdfbb3ccbda10be16e14136e18525bb6ba1a96",
                              "typeString": "literal_string \"Must ask for > 0 NFTs\""
                            },
                            "value": "Must ask for > 0 NFTs"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8c99ee3c92ef48e7b8630a53a6cdfbb3ccbda10be16e14136e18525bb6ba1a96",
                              "typeString": "literal_string \"Must ask for > 0 NFTs\""
                            }
                          ],
                          "id": 2060,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "8358:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8358:53:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2068,
                      "nodeType": "ExpressionStatement",
                      "src": "8358:53:14"
                    }
                  ]
                },
                {
                  "assignments": [
                    2071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2071,
                      "mutability": "mutable",
                      "name": "protocolFee",
                      "nameLocation": "8494:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2107,
                      "src": "8486:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2070,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8486:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2072,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8486:19:14"
                },
                {
                  "expression": {
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2073,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2071,
                          "src": "8516:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2074,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "8529:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2075,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8515:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2077,
                            "name": "nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "8594:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8601:6:14",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8594:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2079,
                          "name": "maxExpectedTokenInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2016,
                          "src": "8621:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2080,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2037,
                          "src": "8656:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        {
                          "id": 2081,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2031,
                          "src": "8683:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          },
                          {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        ],
                        "id": 2076,
                        "name": "_calculateBuyInfoAndUpdatePoolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "8544:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_ICurve_$8375_$_t_contract$_ILSSVMPairFactoryLike_$1700_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,contract ICurve,contract ILSSVMPairFactoryLike) returns (uint256,uint256)"
                        }
                      },
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8544:157:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "8515:186:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "ExpressionStatement",
                  "src": "8515:186:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2086,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "8758:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2087,
                        "name": "isRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "8783:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2088,
                        "name": "routerCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "8805:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2089,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "8831:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      {
                        "id": 2090,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2071,
                        "src": "8853:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2085,
                      "name": "_pullTokenInputAndPayProtocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2629,
                      "src": "8712:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$1700_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bool,address,contract ILSSVMPairFactoryLike,uint256)"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8712:162:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "8712:162:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2094,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "8914:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IERC721_$476_$",
                            "typeString": "function () pure returns (contract IERC721)"
                          }
                        },
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8914:5:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 2096,
                        "name": "nftRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "8921:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2097,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "8935:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 2093,
                      "name": "_sendSpecificNFTsToRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2675,
                      "src": "8885:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC721_$476_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IERC721,address,uint256[] calldata)"
                      }
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8885:57:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2099,
                  "nodeType": "ExpressionStatement",
                  "src": "8885:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2101,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "8974:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2100,
                      "name": "_refundTokenToSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "8953:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8953:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "8953:33:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2104,
                      "name": "SwapNFTOutPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1748,
                      "src": "9002:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9002:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2106,
                  "nodeType": "EmitStatement",
                  "src": "8997:21:14"
                }
              ]
            },
            "documentation": {
              "id": 2011,
              "nodeType": "StructuredDocumentation",
              "src": "6759:941:14",
              "text": "@notice Sends token to the pair in exchange for a specific set of NFTs\n@dev To compute the amount of token to send, call bondingCurve.getBuyInfo\nThis swap is meant for users who want specific IDs. Also higher chance of\nreverting if some of the specified IDs leave the pool before the swap goes through.\n@param nftIds The list of IDs of the NFTs to purchase\n@param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\namount is greater than this value, the transaction will be reverted.\n@param nftRecipient The recipient of the NFTs\n@param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\nETH pairs.\n@param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\nETH pairs.\n@return inputAmount The amount of token used for purchase"
            },
            "functionSelector": "6d8b99f7",
            "id": 2108,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2024,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7927:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8922,
                  "src": "7927:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7927:12:14"
              }
            ],
            "name": "swapTokenForSpecificNFTs",
            "nameLocation": "7714:24:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "7767:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7748:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2012,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7748:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2013,
                    "nodeType": "ArrayTypeName",
                    "src": "7748:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "maxExpectedTokenInput",
                  "nameLocation": "7791:21:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7783:29:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7783:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "nftRecipient",
                  "nameLocation": "7830:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7822:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7822:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2020,
                  "mutability": "mutable",
                  "name": "isRouter",
                  "nameLocation": "7857:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7852:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2019,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7852:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "routerCaller",
                  "nameLocation": "7883:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7875:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7875:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7738:163:14"
            },
            "returnParameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "7957:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2108,
                  "src": "7949:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7949:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7948:21:14"
            },
            "scope": 3162,
            "src": "7705:1320:14",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "10090:965:14",
              "statements": [
                {
                  "assignments": [
                    2129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2129,
                      "mutability": "mutable",
                      "name": "_factory",
                      "nameLocation": "10169:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2204,
                      "src": "10147:30:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                        "typeString": "contract ILSSVMPairFactoryLike"
                      },
                      "typeName": {
                        "id": 2128,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2127,
                          "name": "ILSSVMPairFactoryLike",
                          "nameLocations": [
                            "10147:21:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1700,
                          "src": "10147:21:14"
                        },
                        "referencedDeclaration": 1700,
                        "src": "10147:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2132,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2130,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "10180:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                        "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                      }
                    },
                    "id": 2131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:9:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10147:42:14"
                },
                {
                  "assignments": [
                    2135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2135,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "10206:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2204,
                      "src": "10199:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 2134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2133,
                          "name": "ICurve",
                          "nameLocations": [
                            "10199:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "10199:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "10199:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2138,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2136,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "10222:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10222:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10199:37:14"
                },
                {
                  "id": 2166,
                  "nodeType": "Block",
                  "src": "10275:267:14",
                  "statements": [
                    {
                      "assignments": [
                        2141
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2141,
                          "mutability": "mutable",
                          "name": "_poolType",
                          "nameLocation": "10298:9:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 2166,
                          "src": "10289:18:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          },
                          "typeName": {
                            "id": 2140,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2139,
                              "name": "PoolType",
                              "nameLocations": [
                                "10289:8:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1733,
                              "src": "10289:8:14"
                            },
                            "referencedDeclaration": 1733,
                            "src": "10289:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PoolType_$1733",
                              "typeString": "enum LSSVMPair.PoolType"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2144,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2142,
                          "name": "poolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2350,
                          "src": "10310:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                            "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10310:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10289:31:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 2149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2146,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2141,
                                "src": "10359:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2147,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "10372:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 2148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10381:5:14",
                                "memberName": "TOKEN",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1730,
                                "src": "10372:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "10359:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PoolType_$1733",
                                "typeString": "enum LSSVMPair.PoolType"
                              },
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2150,
                                "name": "_poolType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2141,
                                "src": "10390:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2151,
                                  "name": "PoolType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1733,
                                  "src": "10403:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                                    "typeString": "type(enum LSSVMPair.PoolType)"
                                  }
                                },
                                "id": 2152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10412:5:14",
                                "memberName": "TRADE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1732,
                                "src": "10403:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PoolType_$1733",
                                  "typeString": "enum LSSVMPair.PoolType"
                                }
                              },
                              "src": "10390:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10359:58:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "57726f6e6720506f6f6c2074797065",
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10435:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            },
                            "value": "Wrong Pool type"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a3c46107b560bfd193c0d6fc252188d08fc71a48d6bd3120d705bbff68a89a9d",
                              "typeString": "literal_string \"Wrong Pool type\""
                            }
                          ],
                          "id": 2145,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "10334:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10334:132:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2157,
                      "nodeType": "ExpressionStatement",
                      "src": "10334:132:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2159,
                                "name": "nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "10488:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 2160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10495:6:14",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "10488:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10504:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10488:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d7573742061736b20666f72203e2030204e465473",
                            "id": 2163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10507:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8c99ee3c92ef48e7b8630a53a6cdfbb3ccbda10be16e14136e18525bb6ba1a96",
                              "typeString": "literal_string \"Must ask for > 0 NFTs\""
                            },
                            "value": "Must ask for > 0 NFTs"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8c99ee3c92ef48e7b8630a53a6cdfbb3ccbda10be16e14136e18525bb6ba1a96",
                              "typeString": "literal_string \"Must ask for > 0 NFTs\""
                            }
                          ],
                          "id": 2158,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4294967278,
                            4294967278
                          ],
                          "referencedDeclaration": 4294967278,
                          "src": "10480:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10480:51:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2165,
                      "nodeType": "ExpressionStatement",
                      "src": "10480:51:14"
                    }
                  ]
                },
                {
                  "assignments": [
                    2168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2168,
                      "mutability": "mutable",
                      "name": "protocolFee",
                      "nameLocation": "10614:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2204,
                      "src": "10606:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10606:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2169,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10606:19:14"
                },
                {
                  "expression": {
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2170,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2168,
                          "src": "10636:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2171,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2125,
                          "src": "10649:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2172,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "10635:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2174,
                            "name": "nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "10716:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10723:6:14",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10716:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2176,
                          "name": "minExpectedTokenOutput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2114,
                          "src": "10743:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2177,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2135,
                          "src": "10779:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        {
                          "id": 2178,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "10806:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          },
                          {
                            "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                            "typeString": "contract ILSSVMPairFactoryLike"
                          }
                        ],
                        "id": 2173,
                        "name": "_calculateSellInfoAndUpdatePoolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "10665:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_ICurve_$8375_$_t_contract$_ILSSVMPairFactoryLike_$1700_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,contract ICurve,contract ILSSVMPairFactoryLike) returns (uint256,uint256)"
                        }
                      },
                      "id": 2179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10665:159:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "10635:189:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "10635:189:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2183,
                        "name": "tokenRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "10852:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2184,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2125,
                        "src": "10868:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2182,
                      "name": "_sendTokenOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2652,
                      "src": "10835:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10835:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "10835:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2188,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "10916:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      {
                        "id": 2189,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "10926:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2187,
                      "name": "_payProtocolFeeFromPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "10892:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ILSSVMPairFactoryLike_$1700_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ILSSVMPairFactoryLike,uint256)"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10892:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "10892:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2193,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "10969:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IERC721_$476_$",
                            "typeString": "function () pure returns (contract IERC721)"
                          }
                        },
                        "id": 2194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10969:5:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 2195,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "10976:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 2196,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "10984:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      {
                        "id": 2197,
                        "name": "isRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "10994:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2198,
                        "name": "routerCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2120,
                        "src": "11004:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC721_$476",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2192,
                      "name": "_takeNFTsFromSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2831,
                      "src": "10949:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC721_$476_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_contract$_ILSSVMPairFactoryLike_$1700_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC721,uint256[] calldata,contract ILSSVMPairFactoryLike,bool,address)"
                      }
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10949:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "10949:68:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2201,
                      "name": "SwapNFTInPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1746,
                      "src": "11033:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11033:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2203,
                  "nodeType": "EmitStatement",
                  "src": "11028:20:14"
                }
              ]
            },
            "documentation": {
              "id": 2109,
              "nodeType": "StructuredDocumentation",
              "src": "9031:793:14",
              "text": "@notice Sends a set of NFTs to the pair in exchange for token\n@dev To compute the amount of token to that will be received, call bondingCurve.getSellInfo.\n@param nftIds The list of IDs of the NFTs to sell to the pair\n@param minExpectedTokenOutput The minimum acceptable token received by the sender. If the actual\namount is less than this value, the transaction will be reverted.\n@param tokenRecipient The recipient of the token output\n@param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\nETH pairs.\n@param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\nETH pairs.\n@return outputAmount The amount of token received"
            },
            "functionSelector": "b1d3f1c1",
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2122,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10046:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8922,
                  "src": "10046:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "10046:12:14"
              }
            ],
            "name": "swapNFTsForToken",
            "nameLocation": "9838:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "9883:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "9864:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2110,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9864:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2111,
                    "nodeType": "ArrayTypeName",
                    "src": "9864:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "minExpectedTokenOutput",
                  "nameLocation": "9907:22:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "9899:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9899:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "tokenRecipient",
                  "nameLocation": "9955:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "9939:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9939:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "isRouter",
                  "nameLocation": "9984:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "9979:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9979:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "routerCaller",
                  "nameLocation": "10010:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "10002:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10002:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9854:174:14"
            },
            "returnParameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2125,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "10076:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "10068:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10068:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10067:22:14"
            },
            "scope": 3162,
            "src": "9829:1226:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2242,
              "nodeType": "Block",
              "src": "11535:309:14",
              "statements": [
                {
                  "expression": {
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2222,
                          "name": "error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2212,
                          "src": "11559:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$7962",
                            "typeString": "enum CurveErrorCodes.Error"
                          }
                        },
                        {
                          "id": 2223,
                          "name": "newSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "11578:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2224,
                          "name": "newDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2216,
                          "src": "11604:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2225,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2218,
                          "src": "11626:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2226,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2220,
                          "src": "11651:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2227,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11545:127:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2231,
                          "name": "spotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1738,
                          "src": "11714:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2232,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1740,
                          "src": "11737:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2233,
                          "name": "numNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "11756:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2234,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1742,
                          "src": "11777:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2235,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2308,
                                "src": "11794:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                                  "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                                }
                              },
                              "id": 2236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11794:9:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                                "typeString": "contract ILSSVMPairFactoryLike"
                              }
                            },
                            "id": 2237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11804:21:14",
                            "memberName": "protocolFeeMultiplier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1667,
                            "src": "11794:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11794:33:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2228,
                            "name": "bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "11675:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                              "typeString": "function () pure returns (contract ICurve)"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11675:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11690:10:14",
                        "memberName": "getBuyInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8349,
                        "src": "11675:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint128,uint128,uint256,uint256,uint256) view external returns (enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                        }
                      },
                      "id": 2239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11675:162:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "src": "11545:292:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2241,
                  "nodeType": "ExpressionStatement",
                  "src": "11545:292:14"
                }
              ]
            },
            "documentation": {
              "id": 2206,
              "nodeType": "StructuredDocumentation",
              "src": "11100:157:14",
              "text": "@dev Used as read function to query the bonding curve for buy pricing info\n@param numNFTs The number of NFTs to buy from the pair"
            },
            "functionSelector": "a5cb2b91",
            "id": 2243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuyNFTQuote",
            "nameLocation": "11271:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "11294:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11286:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11286:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11285:17:14"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "11385:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11363:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$7962",
                    "typeString": "enum CurveErrorCodes.Error"
                  },
                  "typeName": {
                    "id": 2211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2210,
                      "name": "CurveErrorCodes.Error",
                      "nameLocations": [
                        "11363:15:14",
                        "11379:5:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7962,
                      "src": "11363:21:14"
                    },
                    "referencedDeclaration": 7962,
                    "src": "11363:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2214,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "11412:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11404:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11404:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2216,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "11446:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11438:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11438:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "11476:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11468:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11468:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "11509:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "11501:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11501:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11349:181:14"
            },
            "scope": 3162,
            "src": "11262:582:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2280,
              "nodeType": "Block",
              "src": "12287:311:14",
              "statements": [
                {
                  "expression": {
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2260,
                          "name": "error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2250,
                          "src": "12311:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$7962",
                            "typeString": "enum CurveErrorCodes.Error"
                          }
                        },
                        {
                          "id": 2261,
                          "name": "newSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2252,
                          "src": "12330:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2262,
                          "name": "newDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2254,
                          "src": "12356:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2263,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2256,
                          "src": "12378:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2264,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2258,
                          "src": "12404:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2265,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12297:128:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2269,
                          "name": "spotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1738,
                          "src": "12468:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2270,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1740,
                          "src": "12491:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2271,
                          "name": "numNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2246,
                          "src": "12510:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2272,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1742,
                          "src": "12531:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2273,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2308,
                                "src": "12548:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                                  "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                                }
                              },
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12548:9:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                                "typeString": "contract ILSSVMPairFactoryLike"
                              }
                            },
                            "id": 2275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12558:21:14",
                            "memberName": "protocolFeeMultiplier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1667,
                            "src": "12548:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12548:33:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2266,
                            "name": "bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "12428:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                              "typeString": "function () pure returns (contract ICurve)"
                            }
                          },
                          "id": 2267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12428:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12443:11:14",
                        "memberName": "getSellInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8374,
                        "src": "12428:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint128,uint128,uint256,uint256,uint256) view external returns (enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                        }
                      },
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12428:163:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "src": "12297:294:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2279,
                  "nodeType": "ExpressionStatement",
                  "src": "12297:294:14"
                }
              ]
            },
            "documentation": {
              "id": 2244,
              "nodeType": "StructuredDocumentation",
              "src": "11850:157:14",
              "text": "@dev Used as read function to query the bonding curve for sell pricing info\n@param numNFTs The number of NFTs to sell to the pair"
            },
            "functionSelector": "0c295e56",
            "id": 2281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellNFTQuote",
            "nameLocation": "12021:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "12045:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12037:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12037:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12036:17:14"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "12136:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12114:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$7962",
                    "typeString": "enum CurveErrorCodes.Error"
                  },
                  "typeName": {
                    "id": 2249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2248,
                      "name": "CurveErrorCodes.Error",
                      "nameLocations": [
                        "12114:15:14",
                        "12130:5:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7962,
                      "src": "12114:21:14"
                    },
                    "referencedDeclaration": 7962,
                    "src": "12114:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "12163:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12155:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12155:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "12197:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12189:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12189:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2256,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "12227:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12219:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12219:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2258,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "12261:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2281,
                  "src": "12253:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12253:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12100:182:14"
            },
            "scope": 3162,
            "src": "12012:586:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2282,
              "nodeType": "StructuredDocumentation",
              "src": "12604:64:14",
              "text": "@notice Returns all NFT IDs held by the pool"
            },
            "functionSelector": "2f4fefaf",
            "id": 2288,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllHeldIds",
            "nameLocation": "12682:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12695:2:14"
            },
            "returnParameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "12729:16:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2284,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12729:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2285,
                    "nodeType": "ArrayTypeName",
                    "src": "12729:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12728:18:14"
            },
            "scope": 3162,
            "src": "12673:74:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2289,
              "nodeType": "StructuredDocumentation",
              "src": "12753:105:14",
              "text": "@notice Returns the pair's variant (NFT is enumerable or not, pair uses ETH or ERC20)"
            },
            "functionSelector": "3053fc58",
            "id": 2295,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairVariant",
            "nameLocation": "12872:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12883:2:14"
            },
            "returnParameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2295,
                  "src": "12947:33:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PairVariant_$1662",
                    "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                  },
                  "typeName": {
                    "id": 2292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2291,
                      "name": "ILSSVMPairFactoryLike.PairVariant",
                      "nameLocations": [
                        "12947:21:14",
                        "12969:11:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1662,
                      "src": "12947:33:14"
                    },
                    "referencedDeclaration": 1662,
                    "src": "12947:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PairVariant_$1662",
                      "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12946:35:14"
            },
            "scope": 3162,
            "src": "12863:119:14",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2307,
              "nodeType": "Block",
              "src": "13060:222:14",
              "statements": [
                {
                  "assignments": [
                    2302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2302,
                      "mutability": "mutable",
                      "name": "paramsLength",
                      "nameLocation": "13078:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2307,
                      "src": "13070:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13070:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2305,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2303,
                      "name": "_immutableParamsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "13093:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13093:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13070:47:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13136:140:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13150:116:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13183:4:14",
                              "type": "",
                              "value": "0x60"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "calldatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "13222:12:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13222:14:14"
                                    },
                                    {
                                      "name": "paramsLength",
                                      "nodeType": "YulIdentifier",
                                      "src": "13238:12:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "13218:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13218:33:14"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "13205:12:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13205:47:14"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "13162:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13162:104:14"
                        },
                        "variableNames": [
                          {
                            "name": "_factory",
                            "nodeType": "YulIdentifier",
                            "src": "13150:8:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13150:8:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13238:12:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2306,
                  "nodeType": "InlineAssembly",
                  "src": "13127:149:14"
                }
              ]
            },
            "functionSelector": "c45a0155",
            "id": 2308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "factory",
            "nameLocation": "12997:7:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13004:2:14"
            },
            "returnParameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "13050:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2308,
                  "src": "13028:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2297,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "13028:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "13028:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "13028:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13027:32:14"
            },
            "scope": 3162,
            "src": "12988:294:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2321,
              "nodeType": "Block",
              "src": "13449:236:14",
              "statements": [
                {
                  "assignments": [
                    2316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2316,
                      "mutability": "mutable",
                      "name": "paramsLength",
                      "nameLocation": "13467:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2321,
                      "src": "13459:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13459:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2319,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2317,
                      "name": "_immutableParamsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "13482:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13482:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13459:47:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13525:154:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13539:130:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13577:4:14",
                              "type": "",
                              "value": "0x60"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "13620:12:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13620:14:14"
                                        },
                                        {
                                          "name": "paramsLength",
                                          "nodeType": "YulIdentifier",
                                          "src": "13636:12:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "13616:3:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13616:33:14"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13651:2:14",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13612:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13612:42:14"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "13599:12:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13599:56:14"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "13556:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13556:113:14"
                        },
                        "variableNames": [
                          {
                            "name": "_bondingCurve",
                            "nodeType": "YulIdentifier",
                            "src": "13539:13:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2313,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13539:13:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2316,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13636:12:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2320,
                  "nodeType": "InlineAssembly",
                  "src": "13516:163:14"
                }
              ]
            },
            "documentation": {
              "id": 2309,
              "nodeType": "StructuredDocumentation",
              "src": "13288:89:14",
              "text": "@notice Returns the type of bonding curve that parameterizes the pair"
            },
            "functionSelector": "eff1d50e",
            "id": 2322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bondingCurve",
            "nameLocation": "13391:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13403:2:14"
            },
            "returnParameters": {
              "id": 2314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2313,
                  "mutability": "mutable",
                  "name": "_bondingCurve",
                  "nameLocation": "13434:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2322,
                  "src": "13427:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$8375",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 2312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2311,
                      "name": "ICurve",
                      "nameLocations": [
                        "13427:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8375,
                      "src": "13427:6:14"
                    },
                    "referencedDeclaration": 8375,
                    "src": "13427:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13426:22:14"
            },
            "scope": 3162,
            "src": "13382:303:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2335,
              "nodeType": "Block",
              "src": "13828:227:14",
              "statements": [
                {
                  "assignments": [
                    2330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2330,
                      "mutability": "mutable",
                      "name": "paramsLength",
                      "nameLocation": "13846:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2335,
                      "src": "13838:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2329,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13838:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2333,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2331,
                      "name": "_immutableParamsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "13861:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13861:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13838:47:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13904:145:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13918:121:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13947:4:14",
                              "type": "",
                              "value": "0x60"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "13990:12:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13990:14:14"
                                        },
                                        {
                                          "name": "paramsLength",
                                          "nodeType": "YulIdentifier",
                                          "src": "14006:12:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "13986:3:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13986:33:14"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14021:2:14",
                                      "type": "",
                                      "value": "40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13982:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13982:42:14"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "13969:12:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13969:56:14"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "13926:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13926:113:14"
                        },
                        "variableNames": [
                          {
                            "name": "_nft",
                            "nodeType": "YulIdentifier",
                            "src": "13918:4:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2327,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13918:4:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2330,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14006:12:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2334,
                  "nodeType": "InlineAssembly",
                  "src": "13895:154:14"
                }
              ]
            },
            "documentation": {
              "id": 2323,
              "nodeType": "StructuredDocumentation",
              "src": "13691:82:14",
              "text": "@notice Returns the NFT collection that parameterizes the pair"
            },
            "functionSelector": "47ccca02",
            "id": 2336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nft",
            "nameLocation": "13787:3:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13790:2:14"
            },
            "returnParameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "13822:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2336,
                  "src": "13814:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$476",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 2326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2325,
                      "name": "IERC721",
                      "nameLocations": [
                        "13814:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 476,
                      "src": "13814:7:14"
                    },
                    "referencedDeclaration": 476,
                    "src": "13814:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13813:14:14"
            },
            "scope": 3162,
            "src": "13778:277:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2349,
              "nodeType": "Block",
              "src": "14196:232:14",
              "statements": [
                {
                  "assignments": [
                    2344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2344,
                      "mutability": "mutable",
                      "name": "paramsLength",
                      "nameLocation": "14214:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "14206:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2343,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14206:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2347,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2345,
                      "name": "_immutableParamsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "14229:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14229:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14206:47:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14272:150:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14286:126:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14320:4:14",
                              "type": "",
                              "value": "0xf8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "14363:12:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14363:14:14"
                                        },
                                        {
                                          "name": "paramsLength",
                                          "nodeType": "YulIdentifier",
                                          "src": "14379:12:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "14359:3:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14359:33:14"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14394:2:14",
                                      "type": "",
                                      "value": "60"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14355:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14355:42:14"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "14342:12:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14342:56:14"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "14299:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14299:113:14"
                        },
                        "variableNames": [
                          {
                            "name": "_poolType",
                            "nodeType": "YulIdentifier",
                            "src": "14286:9:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2341,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14286:9:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2344,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14379:12:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2348,
                  "nodeType": "InlineAssembly",
                  "src": "14263:159:14"
                }
              ]
            },
            "documentation": {
              "id": 2337,
              "nodeType": "StructuredDocumentation",
              "src": "14061:69:14",
              "text": "@notice Returns the pair's type (TOKEN/NFT/TRADE)"
            },
            "functionSelector": "b1dd61b6",
            "id": 2350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolType",
            "nameLocation": "14144:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14152:2:14"
            },
            "returnParameters": {
              "id": 2342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2341,
                  "mutability": "mutable",
                  "name": "_poolType",
                  "nameLocation": "14185:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "14176:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolType_$1733",
                    "typeString": "enum LSSVMPair.PoolType"
                  },
                  "typeName": {
                    "id": 2340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2339,
                      "name": "PoolType",
                      "nameLocations": [
                        "14176:8:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1733,
                      "src": "14176:8:14"
                    },
                    "referencedDeclaration": 1733,
                    "src": "14176:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$1733",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14175:20:14"
            },
            "scope": 3162,
            "src": "14135:293:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2393,
              "nodeType": "Block",
              "src": "14774:573:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PoolType_$1733",
                      "typeString": "enum LSSVMPair.PoolType"
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2356,
                        "name": "poolType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "14929:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                          "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                        }
                      },
                      "id": 2357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14929:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2358,
                        "name": "PoolType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "14943:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                          "typeString": "type(enum LSSVMPair.PoolType)"
                        }
                      },
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14952:5:14",
                      "memberName": "TRADE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1732,
                      "src": "14943:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      }
                    },
                    "src": "14929:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2370,
                  "nodeType": "IfStatement",
                  "src": "14925:88:14",
                  "trueBody": {
                    "id": 2369,
                    "nodeType": "Block",
                    "src": "14959:54:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2365,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "14996:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                    "typeString": "contract LSSVMPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                    "typeString": "contract LSSVMPair"
                                  }
                                ],
                                "id": 2364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14988:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2363,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14988:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14988:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14980:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14980:8:14",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14980:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 2355,
                        "id": 2368,
                        "nodeType": "Return",
                        "src": "14973:29:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2371,
                      "name": "_assetRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "15140:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2372,
                      "name": "assetRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1744,
                      "src": "15158:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "15140:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "15140:32:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2375,
                      "name": "_assetRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "15186:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15213:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15205:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15205:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15205:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15186:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2392,
                  "nodeType": "IfStatement",
                  "src": "15182:159:14",
                  "trueBody": {
                    "id": 2391,
                    "nodeType": "Block",
                    "src": "15217:124:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2381,
                            "name": "_assetRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "15290:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2386,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "15324:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                      "typeString": "contract LSSVMPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                      "typeString": "contract LSSVMPair"
                                    }
                                  ],
                                  "id": 2385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15316:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2384,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15316:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15316:13:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15308:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 2382,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15308:8:14",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15308:22:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "15290:40:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2390,
                        "nodeType": "ExpressionStatement",
                        "src": "15290:40:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2351,
              "nodeType": "StructuredDocumentation",
              "src": "14434:224:14",
              "text": "@notice Returns the address that assets that receives assets when a swap is done with this pair\nCan be set to another address by the owner, if set to address(0), defaults to the pair's own address"
            },
            "functionSelector": "79eac6c2",
            "id": 2394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetRecipient",
            "nameLocation": "14672:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14689:2:14"
            },
            "returnParameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2354,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "14753:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2394,
                  "src": "14737:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14737:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14736:33:14"
            },
            "scope": 3162,
            "src": "14663:684:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2503,
              "nodeType": "Block",
              "src": "16254:1321:14",
              "statements": [
                {
                  "assignments": [
                    2416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2416,
                      "mutability": "mutable",
                      "name": "error",
                      "nameLocation": "16286:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "16264:27:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      },
                      "typeName": {
                        "id": 2415,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2414,
                          "name": "CurveErrorCodes.Error",
                          "nameLocations": [
                            "16264:15:14",
                            "16280:5:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7962,
                          "src": "16264:21:14"
                        },
                        "referencedDeclaration": 7962,
                        "src": "16264:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$7962",
                          "typeString": "enum CurveErrorCodes.Error"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2417,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16264:27:14"
                },
                {
                  "assignments": [
                    2419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2419,
                      "mutability": "mutable",
                      "name": "currentSpotPrice",
                      "nameLocation": "16348:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "16340:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2418,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16340:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2421,
                  "initialValue": {
                    "id": 2420,
                    "name": "spotPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1738,
                    "src": "16367:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16340:36:14"
                },
                {
                  "assignments": [
                    2423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2423,
                      "mutability": "mutable",
                      "name": "newSpotPrice",
                      "nameLocation": "16394:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "16386:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2422,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16386:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2424,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16386:20:14"
                },
                {
                  "assignments": [
                    2426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2426,
                      "mutability": "mutable",
                      "name": "currentDelta",
                      "nameLocation": "16424:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "16416:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2425,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16416:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2428,
                  "initialValue": {
                    "id": 2427,
                    "name": "delta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1740,
                    "src": "16439:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16416:28:14"
                },
                {
                  "assignments": [
                    2430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2430,
                      "mutability": "mutable",
                      "name": "newDelta",
                      "nameLocation": "16462:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "16454:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2429,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16454:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2431,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16454:16:14"
                },
                {
                  "expression": {
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2432,
                          "name": "error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2416,
                          "src": "16494:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$7962",
                            "typeString": "enum CurveErrorCodes.Error"
                          }
                        },
                        {
                          "id": 2433,
                          "name": "newSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "16513:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2434,
                          "name": "newDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2430,
                          "src": "16539:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2435,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2410,
                          "src": "16561:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2436,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2408,
                          "src": "16586:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2437,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16480:127:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2440,
                          "name": "currentSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2419,
                          "src": "16648:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2441,
                          "name": "currentDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2426,
                          "src": "16678:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2442,
                          "name": "numNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2397,
                          "src": "16704:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2443,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1742,
                          "src": "16725:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2444,
                              "name": "_factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2405,
                              "src": "16742:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                                "typeString": "contract ILSSVMPairFactoryLike"
                              }
                            },
                            "id": 2445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16751:21:14",
                            "memberName": "protocolFeeMultiplier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1667,
                            "src": "16742:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16742:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2438,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2402,
                          "src": "16610:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16624:10:14",
                        "memberName": "getBuyInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8349,
                        "src": "16610:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint128,uint128,uint256,uint256,uint256) view external returns (enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16610:174:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "src": "16480:304:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2449,
                  "nodeType": "ExpressionStatement",
                  "src": "16480:304:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    },
                    "id": 2454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2450,
                      "name": "error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2416,
                      "src": "16847:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 2451,
                          "name": "CurveErrorCodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7963,
                          "src": "16856:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurveErrorCodes_$7963_$",
                            "typeString": "type(contract CurveErrorCodes)"
                          }
                        },
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16872:5:14",
                        "memberName": "Error",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7962,
                        "src": "16856:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Error_$7962_$",
                          "typeString": "type(enum CurveErrorCodes.Error)"
                        }
                      },
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "16878:2:14",
                      "memberName": "OK",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7959,
                      "src": "16856:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      }
                    },
                    "src": "16847:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2460,
                  "nodeType": "IfStatement",
                  "src": "16843:95:14",
                  "trueBody": {
                    "id": 2459,
                    "nodeType": "Block",
                    "src": "16882:56:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2456,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2416,
                              "src": "16921:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$7962",
                                "typeString": "enum CurveErrorCodes.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$7962",
                                "typeString": "enum CurveErrorCodes.Error"
                              }
                            ],
                            "id": 2455,
                            "name": "BondingCurveError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "16903:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_Error_$7962_$returns$__$",
                              "typeString": "function (enum CurveErrorCodes.Error) pure"
                            }
                          },
                          "id": 2457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16903:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2458,
                        "nodeType": "RevertStatement",
                        "src": "16896:31:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2462,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2410,
                          "src": "17005:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2463,
                          "name": "maxExpectedTokenInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2399,
                          "src": "17020:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17005:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e20746f6f206d616e7920746f6b656e73",
                        "id": 2465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17043:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5914a04aae5874ced8e7ab801bf38e84e7a28d967fb7f35c9b83d63b72efc31",
                          "typeString": "literal_string \"In too many tokens\""
                        },
                        "value": "In too many tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5914a04aae5874ced8e7ab801bf38e84e7a28d967fb7f35c9b83d63b72efc31",
                          "typeString": "literal_string \"In too many tokens\""
                        }
                      ],
                      "id": 2461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16997:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16997:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2467,
                  "nodeType": "ExpressionStatement",
                  "src": "16997:67:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2468,
                        "name": "currentSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "17121:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 2469,
                        "name": "newSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2423,
                        "src": "17141:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "17121:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2471,
                        "name": "currentDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "17157:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 2472,
                        "name": "newDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "17173:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "17157:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17121:60:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2484,
                  "nodeType": "IfStatement",
                  "src": "17117:145:14",
                  "trueBody": {
                    "id": 2483,
                    "nodeType": "Block",
                    "src": "17183:79:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2475,
                            "name": "spotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "17197:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2476,
                            "name": "newSpotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "17209:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17197:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2478,
                        "nodeType": "ExpressionStatement",
                        "src": "17197:24:14"
                      },
                      {
                        "expression": {
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2479,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "17235:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2480,
                            "name": "newDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "17243:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17235:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2482,
                        "nodeType": "ExpressionStatement",
                        "src": "17235:16:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2485,
                      "name": "currentSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2419,
                      "src": "17333:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2486,
                      "name": "newSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2423,
                      "src": "17353:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "17333:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2493,
                  "nodeType": "IfStatement",
                  "src": "17329:97:14",
                  "trueBody": {
                    "id": 2492,
                    "nodeType": "Block",
                    "src": "17367:59:14",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2489,
                              "name": "newSpotPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2423,
                              "src": "17402:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2488,
                            "name": "SpotPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "17386:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17386:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2491,
                        "nodeType": "EmitStatement",
                        "src": "17381:34:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2494,
                      "name": "currentDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2426,
                      "src": "17492:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2495,
                      "name": "newDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2430,
                      "src": "17508:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "17492:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2502,
                  "nodeType": "IfStatement",
                  "src": "17488:81:14",
                  "trueBody": {
                    "id": 2501,
                    "nodeType": "Block",
                    "src": "17518:51:14",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2498,
                              "name": "newDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2430,
                              "src": "17549:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2497,
                            "name": "DeltaUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1766,
                            "src": "17537:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17537:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2500,
                        "nodeType": "EmitStatement",
                        "src": "17532:26:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2395,
              "nodeType": "StructuredDocumentation",
              "src": "15396:607:14",
              "text": "@notice Calculates the amount needed to be sent into the pair for a buy and adjusts spot price or delta if necessary\n@param numNFTs The amount of NFTs to purchase from the pair\n@param maxExpectedTokenInput The maximum acceptable cost from the sender. If the actual\namount is greater than this value, the transaction will be reverted.\n@param protocolFee The percentage of protocol fee to be taken, as a percentage\n@return protocolFee The amount of tokens to send as protocol fee\n@return inputAmount The amount of tokens total tokens receive"
            },
            "id": 2504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateBuyInfoAndUpdatePoolParams",
            "nameLocation": "16017:36:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "16071:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16063:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16063:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "maxExpectedTokenInput",
                  "nameLocation": "16096:21:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16088:29:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16088:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "_bondingCurve",
                  "nameLocation": "16134:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16127:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$8375",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 2401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2400,
                      "name": "ICurve",
                      "nameLocations": [
                        "16127:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8375,
                      "src": "16127:6:14"
                    },
                    "referencedDeclaration": 8375,
                    "src": "16127:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2405,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "16179:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16157:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2404,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2403,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "16157:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "16157:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "16157:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16053:140:14"
            },
            "returnParameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "16220:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16212:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16212:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2410,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "16241:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "16233:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16233:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16211:42:14"
            },
            "scope": 3162,
            "src": "16008:1567:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2613,
              "nodeType": "Block",
              "src": "18446:1355:14",
              "statements": [
                {
                  "assignments": [
                    2526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2526,
                      "mutability": "mutable",
                      "name": "error",
                      "nameLocation": "18478:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2613,
                      "src": "18456:27:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      },
                      "typeName": {
                        "id": 2525,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2524,
                          "name": "CurveErrorCodes.Error",
                          "nameLocations": [
                            "18456:15:14",
                            "18472:5:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7962,
                          "src": "18456:21:14"
                        },
                        "referencedDeclaration": 7962,
                        "src": "18456:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$7962",
                          "typeString": "enum CurveErrorCodes.Error"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2527,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18456:27:14"
                },
                {
                  "assignments": [
                    2529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2529,
                      "mutability": "mutable",
                      "name": "currentSpotPrice",
                      "nameLocation": "18540:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2613,
                      "src": "18532:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2528,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18532:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2531,
                  "initialValue": {
                    "id": 2530,
                    "name": "spotPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1738,
                    "src": "18559:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18532:36:14"
                },
                {
                  "assignments": [
                    2533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2533,
                      "mutability": "mutable",
                      "name": "newSpotPrice",
                      "nameLocation": "18586:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2613,
                      "src": "18578:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2532,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18578:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2534,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18578:20:14"
                },
                {
                  "assignments": [
                    2536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2536,
                      "mutability": "mutable",
                      "name": "currentDelta",
                      "nameLocation": "18616:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2613,
                      "src": "18608:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2535,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18608:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2538,
                  "initialValue": {
                    "id": 2537,
                    "name": "delta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1740,
                    "src": "18631:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18608:28:14"
                },
                {
                  "assignments": [
                    2540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2540,
                      "mutability": "mutable",
                      "name": "newDelta",
                      "nameLocation": "18654:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2613,
                      "src": "18646:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2539,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18646:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2541,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18646:16:14"
                },
                {
                  "expression": {
                    "id": 2558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2542,
                          "name": "error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "18686:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$7962",
                            "typeString": "enum CurveErrorCodes.Error"
                          }
                        },
                        {
                          "id": 2543,
                          "name": "newSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2533,
                          "src": "18705:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2544,
                          "name": "newDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2540,
                          "src": "18731:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2545,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2520,
                          "src": "18753:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2546,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2518,
                          "src": "18779:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2547,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18672:128:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2550,
                          "name": "currentSpotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "18842:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2551,
                          "name": "currentDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2536,
                          "src": "18872:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 2552,
                          "name": "numNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2507,
                          "src": "18898:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2553,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1742,
                          "src": "18919:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2554,
                              "name": "_factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2515,
                              "src": "18936:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                                "typeString": "contract ILSSVMPairFactoryLike"
                              }
                            },
                            "id": 2555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18945:21:14",
                            "memberName": "protocolFeeMultiplier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1667,
                            "src": "18936:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18936:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2548,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2512,
                          "src": "18803:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$8375",
                            "typeString": "contract ICurve"
                          }
                        },
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18817:11:14",
                        "memberName": "getSellInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8374,
                        "src": "18803:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint128,uint128,uint256,uint256,uint256) view external returns (enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                        }
                      },
                      "id": 2557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18803:175:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_enum$_Error_$7962_$_t_uint128_$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(enum CurveErrorCodes.Error,uint128,uint128,uint256,uint256)"
                      }
                    },
                    "src": "18672:306:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "18672:306:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Error_$7962",
                      "typeString": "enum CurveErrorCodes.Error"
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2560,
                      "name": "error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "19041:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 2561,
                          "name": "CurveErrorCodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7963,
                          "src": "19050:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurveErrorCodes_$7963_$",
                            "typeString": "type(contract CurveErrorCodes)"
                          }
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19066:5:14",
                        "memberName": "Error",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7962,
                        "src": "19050:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Error_$7962_$",
                          "typeString": "type(enum CurveErrorCodes.Error)"
                        }
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "19072:2:14",
                      "memberName": "OK",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7959,
                      "src": "19050:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Error_$7962",
                        "typeString": "enum CurveErrorCodes.Error"
                      }
                    },
                    "src": "19041:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2570,
                  "nodeType": "IfStatement",
                  "src": "19037:95:14",
                  "trueBody": {
                    "id": 2569,
                    "nodeType": "Block",
                    "src": "19076:56:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2566,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "19115:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$7962",
                                "typeString": "enum CurveErrorCodes.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$7962",
                                "typeString": "enum CurveErrorCodes.Error"
                              }
                            ],
                            "id": 2565,
                            "name": "BondingCurveError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "19097:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_Error_$7962_$returns$__$",
                              "typeString": "function (enum CurveErrorCodes.Error) pure"
                            }
                          },
                          "id": 2567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19097:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2568,
                        "nodeType": "RevertStatement",
                        "src": "19090:31:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2572,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2520,
                          "src": "19205:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2573,
                          "name": "minExpectedTokenOutput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "19221:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19205:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f757420746f6f206c6974746c6520746f6b656e73",
                        "id": 2575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19257:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_741c75e6853ed95bc80989d8d4a9b23df7c2f062798f7b556d5fcdfb7766c9f5",
                          "typeString": "literal_string \"Out too little tokens\""
                        },
                        "value": "Out too little tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_741c75e6853ed95bc80989d8d4a9b23df7c2f062798f7b556d5fcdfb7766c9f5",
                          "typeString": "literal_string \"Out too little tokens\""
                        }
                      ],
                      "id": 2571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "19184:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19184:106:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "19184:106:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2578,
                        "name": "currentSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2529,
                        "src": "19347:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 2579,
                        "name": "newSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2533,
                        "src": "19367:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "19347:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2581,
                        "name": "currentDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2536,
                        "src": "19383:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 2582,
                        "name": "newDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "19399:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "19383:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19347:60:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2594,
                  "nodeType": "IfStatement",
                  "src": "19343:145:14",
                  "trueBody": {
                    "id": 2593,
                    "nodeType": "Block",
                    "src": "19409:79:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2585,
                            "name": "spotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "19423:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2586,
                            "name": "newSpotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2533,
                            "src": "19435:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "19423:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2588,
                        "nodeType": "ExpressionStatement",
                        "src": "19423:24:14"
                      },
                      {
                        "expression": {
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2589,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "19461:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2590,
                            "name": "newDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "19469:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "19461:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2592,
                        "nodeType": "ExpressionStatement",
                        "src": "19461:16:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2595,
                      "name": "currentSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2529,
                      "src": "19559:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2596,
                      "name": "newSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2533,
                      "src": "19579:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "19559:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2603,
                  "nodeType": "IfStatement",
                  "src": "19555:97:14",
                  "trueBody": {
                    "id": 2602,
                    "nodeType": "Block",
                    "src": "19593:59:14",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2599,
                              "name": "newSpotPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2533,
                              "src": "19628:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2598,
                            "name": "SpotPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "19612:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19612:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2601,
                        "nodeType": "EmitStatement",
                        "src": "19607:34:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2604,
                      "name": "currentDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2536,
                      "src": "19718:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2605,
                      "name": "newDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "19734:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "19718:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2612,
                  "nodeType": "IfStatement",
                  "src": "19714:81:14",
                  "trueBody": {
                    "id": 2611,
                    "nodeType": "Block",
                    "src": "19744:51:14",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2608,
                              "name": "newDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "19775:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2607,
                            "name": "DeltaUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1766,
                            "src": "19763:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19763:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2610,
                        "nodeType": "EmitStatement",
                        "src": "19758:26:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2505,
              "nodeType": "StructuredDocumentation",
              "src": "17581:611:14",
              "text": "@notice Calculates the amount needed to be sent by the pair for a sell and adjusts spot price or delta if necessary\n@param numNFTs The amount of NFTs to send to the the pair\n@param minExpectedTokenOutput The minimum acceptable token received by the sender. If the actual\namount is less than this value, the transaction will be reverted.\n@param protocolFee The percentage of protocol fee to be taken, as a percentage\n@return protocolFee The amount of tokens to send as protocol fee\n@return outputAmount The amount of tokens total tokens receive"
            },
            "id": 2614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateSellInfoAndUpdatePoolParams",
            "nameLocation": "18206:37:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2507,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "18261:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18253:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18253:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "mutability": "mutable",
                  "name": "minExpectedTokenOutput",
                  "nameLocation": "18286:22:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18278:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18278:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2512,
                  "mutability": "mutable",
                  "name": "_bondingCurve",
                  "nameLocation": "18325:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18318:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$8375",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 2511,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2510,
                      "name": "ICurve",
                      "nameLocations": [
                        "18318:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8375,
                      "src": "18318:6:14"
                    },
                    "referencedDeclaration": 8375,
                    "src": "18318:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2515,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "18370:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18348:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2514,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2513,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "18348:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "18348:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "18348:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18243:141:14"
            },
            "returnParameters": {
              "id": 2521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "18411:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18403:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18403:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "18432:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "18424:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18424:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18402:43:14"
            },
            "scope": 3162,
            "src": "18197:1604:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2615,
              "nodeType": "StructuredDocumentation",
              "src": "19807:449:14",
              "text": "@notice Pulls the token input of a trade from the trader and pays the protocol fee.\n@param inputAmount The amount of tokens to be sent\n@param isRouter Whether or not the caller is LSSVMRouter\n@param routerCaller If called from LSSVMRouter, store the original caller\n@param _factory The LSSVMPairFactory which stores LSSVMRouter allowlist info\n@param protocolFee The protocol fee to be paid"
            },
            "id": 2629,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_pullTokenInputAndPayProtocolFee",
            "nameLocation": "20270:32:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2617,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "20320:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2629,
                  "src": "20312:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20312:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "isRouter",
                  "nameLocation": "20346:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2629,
                  "src": "20341:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20341:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "routerCaller",
                  "nameLocation": "20372:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2629,
                  "src": "20364:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20364:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2624,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "20416:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2629,
                  "src": "20394:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2622,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "20394:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "20394:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "20394:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2626,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "20442:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2629,
                  "src": "20434:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20434:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20302:157:14"
            },
            "returnParameters": {
              "id": 2628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20476:0:14"
            },
            "scope": 3162,
            "src": "20261:216:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2630,
              "nodeType": "StructuredDocumentation",
              "src": "20483:367:14",
              "text": "@notice Sends excess tokens back to the caller (if applicable)\n@dev We send ETH back to the caller even when called from LSSVMRouter because we do an aggregate slippage check for certain bulk swaps. (Instead of sending directly back to the router caller)\nExcess ETH sent for one swap can then be used to help pay for the next swap."
            },
            "id": 2635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_refundTokenToSender",
            "nameLocation": "20864:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2632,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "20893:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "20885:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20885:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20884:21:14"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20922:0:14"
            },
            "scope": 3162,
            "src": "20855:68:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2636,
              "nodeType": "StructuredDocumentation",
              "src": "20929:104:14",
              "text": "@notice Sends protocol fee (if it exists) back to the LSSVMPairFactory from the pair"
            },
            "id": 2644,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_payProtocolFeeFromPair",
            "nameLocation": "21047:23:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2639,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "21102:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2644,
                  "src": "21080:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2638,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2637,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "21080:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "21080:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "21080:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2641,
                  "mutability": "mutable",
                  "name": "protocolFee",
                  "nameLocation": "21128:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2644,
                  "src": "21120:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21120:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21070:75:14"
            },
            "returnParameters": {
              "id": 2643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21162:0:14"
            },
            "scope": 3162,
            "src": "21038:125:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2645,
              "nodeType": "StructuredDocumentation",
              "src": "21169:175:14",
              "text": "@notice Sends tokens to a recipient\n@param tokenRecipient The address receiving the tokens\n@param outputAmount The amount of tokens to send"
            },
            "id": 2652,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_sendTokenOutput",
            "nameLocation": "21358:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2647,
                  "mutability": "mutable",
                  "name": "tokenRecipient",
                  "nameLocation": "21400:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2652,
                  "src": "21384:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21384:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2649,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "21432:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2652,
                  "src": "21424:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21424:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21374:76:14"
            },
            "returnParameters": {
              "id": 2651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21467:0:14"
            },
            "scope": 3162,
            "src": "21349:119:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2653,
              "nodeType": "StructuredDocumentation",
              "src": "21474:404:14",
              "text": "@notice Sends some number of NFTs to a recipient address, ID agnostic\n@dev Even though we specify the NFT address here, this internal function is only\nused to send NFTs associated with this specific pool.\n@param _nft The address of the NFT to send\n@param nftRecipient The receiving address for the NFTs\n@param numNFTs The number of NFTs to send"
            },
            "id": 2663,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_sendAnyNFTsToRecipient",
            "nameLocation": "21892:23:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2656,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "21933:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "21925:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$476",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 2655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2654,
                      "name": "IERC721",
                      "nameLocations": [
                        "21925:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 476,
                      "src": "21925:7:14"
                    },
                    "referencedDeclaration": 476,
                    "src": "21925:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2658,
                  "mutability": "mutable",
                  "name": "nftRecipient",
                  "nameLocation": "21955:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "21947:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21947:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "numNFTs",
                  "nameLocation": "21985:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2663,
                  "src": "21977:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21977:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21915:83:14"
            },
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22015:0:14"
            },
            "scope": 3162,
            "src": "21883:133:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2664,
              "nodeType": "StructuredDocumentation",
              "src": "22022:390:14",
              "text": "@notice Sends specific NFTs to a recipient address\n@dev Even though we specify the NFT address here, this internal function is only\nused to send NFTs associated with this specific pool.\n@param _nft The address of the NFT to send\n@param nftRecipient The receiving address for the NFTs\n@param nftIds The specific IDs of NFTs to send"
            },
            "id": 2675,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_sendSpecificNFTsToRecipient",
            "nameLocation": "22426:28:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "22472:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "22464:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$476",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 2666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2665,
                      "name": "IERC721",
                      "nameLocations": [
                        "22464:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 476,
                      "src": "22464:7:14"
                    },
                    "referencedDeclaration": 476,
                    "src": "22464:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "nftRecipient",
                  "nameLocation": "22494:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "22486:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22486:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2672,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "22535:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "22516:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2670,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22516:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2671,
                    "nodeType": "ArrayTypeName",
                    "src": "22516:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22454:93:14"
            },
            "returnParameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22564:0:14"
            },
            "scope": 3162,
            "src": "22417:148:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2830,
              "nodeType": "Block",
              "src": "23293:2284:14",
              "statements": [
                {
                  "id": 2829,
                  "nodeType": "Block",
                  "src": "23303:2268:14",
                  "statements": [
                    {
                      "assignments": [
                        2693
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2693,
                          "mutability": "mutable",
                          "name": "_assetRecipient",
                          "nameLocation": "23325:15:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 2829,
                          "src": "23317:23:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 2692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23317:7:14",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2696,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2694,
                          "name": "getAssetRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2394,
                          "src": "23343:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23343:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "23317:45:14"
                    },
                    {
                      "assignments": [
                        2698
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2698,
                          "mutability": "mutable",
                          "name": "numNFTs",
                          "nameLocation": "23384:7:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 2829,
                          "src": "23376:15:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2697,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23376:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2701,
                      "initialValue": {
                        "expression": {
                          "id": 2699,
                          "name": "nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2682,
                          "src": "23394:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 2700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23401:6:14",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "23394:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "23376:31:14"
                    },
                    {
                      "condition": {
                        "id": 2702,
                        "name": "isRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "23426:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2827,
                        "nodeType": "Block",
                        "src": "25168:393:14",
                        "statements": [
                          {
                            "body": {
                              "id": 2825,
                              "nodeType": "Block",
                              "src": "25267:280:14",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2813,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "25336:3:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "25340:6:14",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "25336:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2815,
                                        "name": "_assetRecipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2693,
                                        "src": "25372:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "id": 2816,
                                          "name": "nftIds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2682,
                                          "src": "25413:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 2818,
                                        "indexExpression": {
                                          "id": 2817,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2805,
                                          "src": "25420:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "25413:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2810,
                                        "name": "_nft",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2679,
                                        "src": "25289:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$476",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      "id": 2812,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "25294:16:14",
                                      "memberName": "safeTransferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 431,
                                      "src": "25289:21:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256) external"
                                      }
                                    },
                                    "id": 2819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "25289:155:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2820,
                                  "nodeType": "ExpressionStatement",
                                  "src": "25289:155:14"
                                },
                                {
                                  "id": 2824,
                                  "nodeType": "UncheckedBlock",
                                  "src": "25467:62:14",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2822,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": true,
                                        "src": "25503:3:14",
                                        "subExpression": {
                                          "id": 2821,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2805,
                                          "src": "25505:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2823,
                                      "nodeType": "ExpressionStatement",
                                      "src": "25503:3:14"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2807,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2805,
                                "src": "25252:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2808,
                                "name": "numNFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2698,
                                "src": "25256:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "25252:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2826,
                            "initializationExpression": {
                              "assignments": [
                                2805
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2805,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "25249:1:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2826,
                                  "src": "25241:9:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2804,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25241:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2806,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "25241:9:14"
                            },
                            "nodeType": "ForStatement",
                            "src": "25236:311:14"
                          }
                        ]
                      },
                      "id": 2828,
                      "nodeType": "IfStatement",
                      "src": "23422:2139:14",
                      "trueBody": {
                        "id": 2803,
                        "nodeType": "Block",
                        "src": "23436:1726:14",
                        "statements": [
                          {
                            "assignments": [
                              2705
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2705,
                                "mutability": "mutable",
                                "name": "router",
                                "nameLocation": "23513:6:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 2803,
                                "src": "23501:18:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                  "typeString": "contract LSSVMRouter"
                                },
                                "typeName": {
                                  "id": 2704,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 2703,
                                    "name": "LSSVMRouter",
                                    "nameLocations": [
                                      "23501:11:14"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 7332,
                                    "src": "23501:11:14"
                                  },
                                  "referencedDeclaration": 7332,
                                  "src": "23501:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                    "typeString": "contract LSSVMRouter"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2713,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2709,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "23542:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "23546:6:14",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "23542:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23534:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 2707,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23534:8:14",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23534:19:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2706,
                                "name": "LSSVMRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7332,
                                "src": "23522:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LSSVMRouter_$7332_$",
                                  "typeString": "type(contract LSSVMRouter)"
                                }
                              },
                              "id": 2712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23522:32:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                "typeString": "contract LSSVMRouter"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "23501:53:14"
                          },
                          {
                            "assignments": [
                              2715,
                              null
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2715,
                                "mutability": "mutable",
                                "name": "routerAllowed",
                                "nameLocation": "23578:13:14",
                                "nodeType": "VariableDeclaration",
                                "scope": 2803,
                                "src": "23573:18:14",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 2714,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23573:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              null
                            ],
                            "id": 2720,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 2718,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2705,
                                  "src": "23619:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                    "typeString": "contract LSSVMRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                    "typeString": "contract LSSVMRouter"
                                  }
                                ],
                                "expression": {
                                  "id": 2716,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2685,
                                  "src": "23597:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                                    "typeString": "contract ILSSVMPairFactoryLike"
                                  }
                                },
                                "id": 2717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23606:12:14",
                                "memberName": "routerStatus",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1689,
                                "src": "23597:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_contract$_LSSVMRouter_$7332_$returns$_t_bool_$_t_bool_$",
                                  "typeString": "function (contract LSSVMRouter) view external returns (bool,bool)"
                                }
                              },
                              "id": 2719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23597:29:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                                "typeString": "tuple(bool,bool)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "23572:54:14"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2722,
                                  "name": "routerAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2715,
                                  "src": "23652:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4e6f7420726f75746572",
                                  "id": 2723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23667:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ce73220daea1d0c4fac1c32a18c58b97308ac9dd44a17004824bb79e7e79ed3c",
                                    "typeString": "literal_string \"Not router\""
                                  },
                                  "value": "Not router"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ce73220daea1d0c4fac1c32a18c58b97308ac9dd44a17004824bb79e7e79ed3c",
                                    "typeString": "literal_string \"Not router\""
                                  }
                                ],
                                "id": 2721,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "23644:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23644:36:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2725,
                            "nodeType": "ExpressionStatement",
                            "src": "23644:36:14"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2726,
                                "name": "numNFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2698,
                                "src": "23926:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23936:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "23926:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 2801,
                              "nodeType": "Block",
                              "src": "24710:438:14",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2779,
                                        "name": "_nft",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2679,
                                        "src": "24784:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$476",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      {
                                        "id": 2780,
                                        "name": "routerCaller",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2689,
                                        "src": "24814:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2781,
                                        "name": "_assetRecipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2693,
                                        "src": "24852:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "id": 2782,
                                          "name": "nftIds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2682,
                                          "src": "24893:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 2784,
                                        "indexExpression": {
                                          "hexValue": "30",
                                          "id": 2783,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "24900:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "24893:9:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 2785,
                                          "name": "pairVariant",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2295,
                                          "src": "24928:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PairVariant_$1662_$",
                                            "typeString": "function () pure returns (enum ILSSVMPairFactoryLike.PairVariant)"
                                          }
                                        },
                                        "id": 2786,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "24928:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_PairVariant_$1662",
                                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC721_$476",
                                          "typeString": "contract IERC721"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_PairVariant_$1662",
                                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2776,
                                        "name": "router",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2705,
                                        "src": "24732:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                          "typeString": "contract LSSVMRouter"
                                        }
                                      },
                                      "id": 2778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "24739:19:14",
                                      "memberName": "pairTransferNFTFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6946,
                                      "src": "24732:26:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$476_$_t_address_$_t_address_$_t_uint256_$_t_enum$_PairVariant_$1662_$returns$__$",
                                        "typeString": "function (contract IERC721,address,address,uint256,enum ILSSVMPairFactoryLike.PairVariant) external"
                                      }
                                    },
                                    "id": 2787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24732:231:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2788,
                                  "nodeType": "ExpressionStatement",
                                  "src": "24732:231:14"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 2797,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 2792,
                                                "name": "nftIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2682,
                                                "src": "25031:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 2794,
                                              "indexExpression": {
                                                "hexValue": "30",
                                                "id": 2793,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "25038:1:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "25031:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2790,
                                              "name": "_nft",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2679,
                                              "src": "25018:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC721_$476",
                                                "typeString": "contract IERC721"
                                              }
                                            },
                                            "id": 2791,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "25023:7:14",
                                            "memberName": "ownerOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 409,
                                            "src": "25018:12:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                              "typeString": "function (uint256) view external returns (address)"
                                            }
                                          },
                                          "id": 2795,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "25018:23:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "id": 2796,
                                          "name": "_assetRecipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2693,
                                          "src": "25045:15:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "25018:42:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "4e4654206e6f74207472616e73666572726564",
                                        "id": 2798,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "25086:21:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3c57a493391fb07cf3514936f7c1a36db635a0a2098e11affcee9fb650c56499",
                                          "typeString": "literal_string \"NFT not transferred\""
                                        },
                                        "value": "NFT not transferred"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3c57a493391fb07cf3514936f7c1a36db635a0a2098e11affcee9fb650c56499",
                                          "typeString": "literal_string \"NFT not transferred\""
                                        }
                                      ],
                                      "id": 2789,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "src": "24985:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 2799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24985:144:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2800,
                                  "nodeType": "ExpressionStatement",
                                  "src": "24985:144:14"
                                }
                              ]
                            },
                            "id": 2802,
                            "nodeType": "IfStatement",
                            "src": "23922:1226:14",
                            "trueBody": {
                              "id": 2775,
                              "nodeType": "Block",
                              "src": "23939:765:14",
                              "statements": [
                                {
                                  "assignments": [
                                    2730
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2730,
                                      "mutability": "mutable",
                                      "name": "beforeBalance",
                                      "nameLocation": "23969:13:14",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2775,
                                      "src": "23961:21:14",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 2729,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "23961:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2735,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "id": 2733,
                                        "name": "_assetRecipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2693,
                                        "src": "24000:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2731,
                                        "name": "_nft",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2679,
                                        "src": "23985:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$476",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      "id": 2732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "23990:9:14",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 401,
                                      "src": "23985:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 2734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23985:31:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "23961:55:14"
                                },
                                {
                                  "body": {
                                    "id": 2760,
                                    "nodeType": "Block",
                                    "src": "24073:400:14",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2746,
                                              "name": "_nft",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2679,
                                              "src": "24155:4:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC721_$476",
                                                "typeString": "contract IERC721"
                                              }
                                            },
                                            {
                                              "id": 2747,
                                              "name": "routerCaller",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2689,
                                              "src": "24189:12:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 2748,
                                              "name": "_assetRecipient",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2693,
                                              "src": "24231:15:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "baseExpression": {
                                                "id": 2749,
                                                "name": "nftIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2682,
                                                "src": "24276:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 2751,
                                              "indexExpression": {
                                                "id": 2750,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2737,
                                                "src": "24283:1:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "24276:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 2752,
                                                "name": "pairVariant",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2295,
                                                "src": "24315:11:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PairVariant_$1662_$",
                                                  "typeString": "function () pure returns (enum ILSSVMPairFactoryLike.PairVariant)"
                                                }
                                              },
                                              "id": 2753,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "24315:13:14",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_PairVariant_$1662",
                                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC721_$476",
                                                "typeString": "contract IERC721"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_enum$_PairVariant_$1662",
                                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2743,
                                              "name": "router",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2705,
                                              "src": "24099:6:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_LSSVMRouter_$7332",
                                                "typeString": "contract LSSVMRouter"
                                              }
                                            },
                                            "id": 2745,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "24106:19:14",
                                            "memberName": "pairTransferNFTFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6946,
                                            "src": "24099:26:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$476_$_t_address_$_t_address_$_t_uint256_$_t_enum$_PairVariant_$1662_$returns$__$",
                                              "typeString": "function (contract IERC721,address,address,uint256,enum ILSSVMPairFactoryLike.PairVariant) external"
                                            }
                                          },
                                          "id": 2754,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "24099:255:14",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2755,
                                        "nodeType": "ExpressionStatement",
                                        "src": "24099:255:14"
                                      },
                                      {
                                        "id": 2759,
                                        "nodeType": "UncheckedBlock",
                                        "src": "24381:70:14",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 2757,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "++",
                                              "prefix": true,
                                              "src": "24421:3:14",
                                              "subExpression": {
                                                "id": 2756,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2737,
                                                "src": "24423:1:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 2758,
                                            "nodeType": "ExpressionStatement",
                                            "src": "24421:3:14"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2740,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2737,
                                      "src": "24058:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "id": 2741,
                                      "name": "numNFTs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2698,
                                      "src": "24062:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "24058:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2761,
                                  "initializationExpression": {
                                    "assignments": [
                                      2737
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2737,
                                        "mutability": "mutable",
                                        "name": "i",
                                        "nameLocation": "24051:1:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2761,
                                        "src": "24043:9:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2736,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "24043:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2739,
                                    "initialValue": {
                                      "hexValue": "30",
                                      "id": 2738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "24055:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "24043:13:14"
                                  },
                                  "nodeType": "ForStatement",
                                  "src": "24038:435:14"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2768,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "arguments": [
                                                  {
                                                    "id": 2765,
                                                    "name": "_assetRecipient",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2693,
                                                    "src": "24543:15:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 2763,
                                                    "name": "_nft",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2679,
                                                    "src": "24528:4:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IERC721_$476",
                                                      "typeString": "contract IERC721"
                                                    }
                                                  },
                                                  "id": 2764,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "24533:9:14",
                                                  "memberName": "balanceOf",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 401,
                                                  "src": "24528:14:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                    "typeString": "function (address) view external returns (uint256)"
                                                  }
                                                },
                                                "id": 2766,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "24528:31:14",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 2767,
                                                "name": "beforeBalance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2730,
                                                "src": "24562:13:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "24528:47:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2769,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "24527:49:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "id": 2770,
                                          "name": "numNFTs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2698,
                                          "src": "24608:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "24527:88:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "4e465473206e6f74207472616e73666572726564",
                                        "id": 2772,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "24641:22:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_9a3398a0a86d7ab608e1ae02c191244edcbc99025e22ab885a79e8b3584db4b1",
                                          "typeString": "literal_string \"NFTs not transferred\""
                                        },
                                        "value": "NFTs not transferred"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_9a3398a0a86d7ab608e1ae02c191244edcbc99025e22ab885a79e8b3584db4b1",
                                          "typeString": "literal_string \"NFTs not transferred\""
                                        }
                                      ],
                                      "id": 2762,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "src": "24494:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 2773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24494:191:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2774,
                                  "nodeType": "ExpressionStatement",
                                  "src": "24494:191:14"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 2676,
              "nodeType": "StructuredDocumentation",
              "src": "22571:515:14",
              "text": "@notice Takes NFTs from the caller and sends them into the pair's asset recipient\n@dev This is used by the LSSVMPair's swapNFTForToken function.\n@param _nft The NFT collection to take from\n@param nftIds The specific NFT IDs to take\n@param isRouter True if calling from LSSVMRouter, false otherwise. Not used for\nETH pairs.\n@param routerCaller If isRouter is true, ERC20 tokens will be transferred from this address. Not used for\nETH pairs."
            },
            "id": 2831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_takeNFTsFromSender",
            "nameLocation": "23100:19:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2679,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "23137:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "23129:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$476",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 2678,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2677,
                      "name": "IERC721",
                      "nameLocations": [
                        "23129:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 476,
                      "src": "23129:7:14"
                    },
                    "referencedDeclaration": 476,
                    "src": "23129:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "23170:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "23151:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2680,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23151:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2681,
                    "nodeType": "ArrayTypeName",
                    "src": "23151:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "23208:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "23186:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                    "typeString": "contract ILSSVMPairFactoryLike"
                  },
                  "typeName": {
                    "id": 2684,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2683,
                      "name": "ILSSVMPairFactoryLike",
                      "nameLocations": [
                        "23186:21:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1700,
                      "src": "23186:21:14"
                    },
                    "referencedDeclaration": 1700,
                    "src": "23186:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "isRouter",
                  "nameLocation": "23231:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "23226:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23226:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "mutability": "mutable",
                  "name": "routerCaller",
                  "nameLocation": "23257:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "23249:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23249:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23119:156:14"
            },
            "returnParameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23293:0:14"
            },
            "scope": 3162,
            "src": "23091:2486:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2832,
              "nodeType": "StructuredDocumentation",
              "src": "25583:121:14",
              "text": "@dev Used internally to grab pair parameters from calldata, see LSSVMPairCloner for technical details"
            },
            "id": 2837,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_immutableParamsLength",
            "nameLocation": "25718:22:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25740:2:14"
            },
            "returnParameters": {
              "id": 2836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2837,
                  "src": "25774:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25774:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25773:9:14"
            },
            "scope": 3162,
            "src": "25709:74:14",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 2838,
              "nodeType": "StructuredDocumentation",
              "src": "25829:386:14",
              "text": "@notice Rescues a specified set of NFTs owned by the pair to the owner address. (onlyOwnable modifier is in the implemented function)\n@dev If the NFT is the pair's collection, we also remove it from the id tracking (if the NFT is missing enumerable).\n@param a The NFT to transfer\n@param nftIds The list of IDs of the NFTs to send to the owner"
            },
            "functionSelector": "13edab81",
            "id": 2847,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawERC721",
            "nameLocation": "26229:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2841,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "26252:1:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "26244:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$476",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 2840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2839,
                      "name": "IERC721",
                      "nameLocations": [
                        "26244:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 476,
                      "src": "26244:7:14"
                    },
                    "referencedDeclaration": 476,
                    "src": "26244:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$476",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "26274:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "26255:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26255:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2843,
                    "nodeType": "ArrayTypeName",
                    "src": "26255:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26243:38:14"
            },
            "returnParameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26314:0:14"
            },
            "scope": 3162,
            "src": "26220:95:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2848,
              "nodeType": "StructuredDocumentation",
              "src": "26321:261:14",
              "text": "@notice Rescues ERC20 tokens from the pair to the owner. Only callable by the owner (onlyOwnable modifier is in the implemented function).\n@param a The token to transfer\n@param amount The amount of tokens to send to the owner"
            },
            "functionSelector": "a1db9782",
            "id": 2856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawERC20",
            "nameLocation": "26596:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "26616:1:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2856,
                  "src": "26610:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$9316",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2849,
                      "name": "ERC20",
                      "nameLocations": [
                        "26610:5:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9316,
                      "src": "26610:5:14"
                    },
                    "referencedDeclaration": 9316,
                    "src": "26610:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$9316",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "26627:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2856,
                  "src": "26619:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26619:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26609:25:14"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26651:0:14"
            },
            "scope": 3162,
            "src": "26587:65:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2885,
              "nodeType": "Block",
              "src": "27045:85:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2876,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "27087:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                              "typeString": "contract LSSVMPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                              "typeString": "contract LSSVMPair"
                            }
                          ],
                          "id": 2875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27079:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2874,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27079:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27079:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2878,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27094:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "27098:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27094:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2880,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "27106:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 2881,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2866,
                        "src": "27111:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27120:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 2871,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2860,
                        "src": "27055:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$234",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 2873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27057:21:14",
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "27055:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
                      }
                    },
                    "id": 2883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27055:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2884,
                  "nodeType": "ExpressionStatement",
                  "src": "27055:68:14"
                }
              ]
            },
            "documentation": {
              "id": 2857,
              "nodeType": "StructuredDocumentation",
              "src": "26658:244:14",
              "text": "@notice Rescues ERC1155 tokens from the pair to the owner. Only callable by the owner.\n@param a The NFT to transfer\n@param ids The NFT ids to transfer\n@param amounts The amounts of each id to transfer"
            },
            "functionSelector": "a5ceac99",
            "id": 2886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2869,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2868,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "27035:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "27035:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "27035:9:14"
              }
            ],
            "name": "withdrawERC1155",
            "nameLocation": "26916:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2860,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "26950:1:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "26941:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$234",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 2859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2858,
                      "name": "IERC1155",
                      "nameLocations": [
                        "26941:8:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 234,
                      "src": "26941:8:14"
                    },
                    "referencedDeclaration": 234,
                    "src": "26941:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$234",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "26980:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "26961:22:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2861,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26961:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2862,
                    "nodeType": "ArrayTypeName",
                    "src": "26961:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2866,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "27012:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "26993:26:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2864,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26993:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2865,
                    "nodeType": "ArrayTypeName",
                    "src": "26993:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26931:94:14"
            },
            "returnParameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27045:0:14"
            },
            "scope": 3162,
            "src": "26907:223:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2921,
              "nodeType": "Block",
              "src": "27365:325:14",
              "statements": [
                {
                  "assignments": [
                    2896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2896,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "27382:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2921,
                      "src": "27375:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 2895,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2894,
                          "name": "ICurve",
                          "nameLocations": [
                            "27375:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "27375:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "27375:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2899,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2897,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "27398:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27398:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27375:37:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2903,
                            "name": "newSpotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "27475:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 2901,
                            "name": "_bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2896,
                            "src": "27443:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurve_$8375",
                              "typeString": "contract ICurve"
                            }
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "27457:17:14",
                          "memberName": "validateSpotPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8324,
                          "src": "27443:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint128_$returns$_t_bool_$",
                            "typeString": "function (uint128) view external returns (bool)"
                          }
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27443:45:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e65772073706f7420707269636520666f72206375727665",
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27502:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d4df328f9c7dabb1ef0dac25883e3f9f5e04a8f053c6c4e853c5cf0e9034ae",
                          "typeString": "literal_string \"Invalid new spot price for curve\""
                        },
                        "value": "Invalid new spot price for curve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d4df328f9c7dabb1ef0dac25883e3f9f5e04a8f053c6c4e853c5cf0e9034ae",
                          "typeString": "literal_string \"Invalid new spot price for curve\""
                        }
                      ],
                      "id": 2900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "27422:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27422:124:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "27422:124:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2908,
                      "name": "spotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "27560:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2909,
                      "name": "newSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "27573:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "27560:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2920,
                  "nodeType": "IfStatement",
                  "src": "27556:128:14",
                  "trueBody": {
                    "id": 2919,
                    "nodeType": "Block",
                    "src": "27587:97:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2911,
                            "name": "spotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "27601:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2912,
                            "name": "newSpotPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "27613:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "27601:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2914,
                        "nodeType": "ExpressionStatement",
                        "src": "27601:24:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2916,
                              "name": "newSpotPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2889,
                              "src": "27660:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2915,
                            "name": "SpotPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "27644:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27644:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2918,
                        "nodeType": "EmitStatement",
                        "src": "27639:34:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2887,
              "nodeType": "StructuredDocumentation",
              "src": "27136:158:14",
              "text": "@notice Updates the selling spot price. Only callable by the owner.\n@param newSpotPrice The new selling spot price value, in Token"
            },
            "functionSelector": "d8a1890c",
            "id": 2922,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2891,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "27355:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "27355:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "27355:9:14"
              }
            ],
            "name": "changeSpotPrice",
            "nameLocation": "27308:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2889,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "27332:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2922,
                  "src": "27324:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2888,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "27324:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27323:22:14"
            },
            "returnParameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27365:0:14"
            },
            "scope": 3162,
            "src": "27299:391:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2957,
              "nodeType": "Block",
              "src": "27891:284:14",
              "statements": [
                {
                  "assignments": [
                    2932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2932,
                      "mutability": "mutable",
                      "name": "_bondingCurve",
                      "nameLocation": "27908:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2957,
                      "src": "27901:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurve_$8375",
                        "typeString": "contract ICurve"
                      },
                      "typeName": {
                        "id": 2931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2930,
                          "name": "ICurve",
                          "nameLocations": [
                            "27901:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8375,
                          "src": "27901:6:14"
                        },
                        "referencedDeclaration": 8375,
                        "src": "27901:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$8375",
                          "typeString": "contract ICurve"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2935,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2933,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "27924:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ICurve_$8375_$",
                        "typeString": "function () pure returns (contract ICurve)"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27924:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$8375",
                      "typeString": "contract ICurve"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27901:37:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2939,
                            "name": "newDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2925,
                            "src": "27997:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 2937,
                            "name": "_bondingCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "27969:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurve_$8375",
                              "typeString": "contract ICurve"
                            }
                          },
                          "id": 2938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "27983:13:14",
                          "memberName": "validateDelta",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8316,
                          "src": "27969:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint128_$returns$_t_bool_$",
                            "typeString": "function (uint128) pure external returns (bool)"
                          }
                        },
                        "id": 2940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27969:37:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642064656c746120666f72206375727665",
                        "id": 2941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28020:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be62fed5036353946bfcc1640c08eb0c3130f96f4239063f431da5521ff9c07d",
                          "typeString": "literal_string \"Invalid delta for curve\""
                        },
                        "value": "Invalid delta for curve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be62fed5036353946bfcc1640c08eb0c3130f96f4239063f431da5521ff9c07d",
                          "typeString": "literal_string \"Invalid delta for curve\""
                        }
                      ],
                      "id": 2936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "27948:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27948:107:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2943,
                  "nodeType": "ExpressionStatement",
                  "src": "27948:107:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2944,
                      "name": "delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "28069:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2945,
                      "name": "newDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2925,
                      "src": "28078:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "28069:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2956,
                  "nodeType": "IfStatement",
                  "src": "28065:104:14",
                  "trueBody": {
                    "id": 2955,
                    "nodeType": "Block",
                    "src": "28088:81:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2947,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "28102:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2948,
                            "name": "newDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2925,
                            "src": "28110:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "28102:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2950,
                        "nodeType": "ExpressionStatement",
                        "src": "28102:16:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2952,
                              "name": "newDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2925,
                              "src": "28149:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 2951,
                            "name": "DeltaUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1766,
                            "src": "28137:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 2953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28137:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2954,
                        "nodeType": "EmitStatement",
                        "src": "28132:26:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2923,
              "nodeType": "StructuredDocumentation",
              "src": "27696:132:14",
              "text": "@notice Updates the delta parameter. Only callable by the owner.\n@param newDelta The new delta parameter"
            },
            "functionSelector": "6809f664",
            "id": 2958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2927,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "27881:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "27881:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "27881:9:14"
              }
            ],
            "name": "changeDelta",
            "nameLocation": "27842:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2925,
                  "mutability": "mutable",
                  "name": "newDelta",
                  "nameLocation": "27862:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2958,
                  "src": "27854:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "27854:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27853:18:14"
            },
            "returnParameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27891:0:14"
            },
            "scope": 3162,
            "src": "27833:342:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3000,
              "nodeType": "Block",
              "src": "28481:289:14",
              "statements": [
                {
                  "assignments": [
                    2968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2968,
                      "mutability": "mutable",
                      "name": "_poolType",
                      "nameLocation": "28500:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 3000,
                      "src": "28491:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      },
                      "typeName": {
                        "id": 2967,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2966,
                          "name": "PoolType",
                          "nameLocations": [
                            "28491:8:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1733,
                          "src": "28491:8:14"
                        },
                        "referencedDeclaration": 1733,
                        "src": "28491:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2971,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2969,
                      "name": "poolType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "28512:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                        "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                      }
                    },
                    "id": 2970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28512:10:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$1733",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28491:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        },
                        "id": 2976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2973,
                          "name": "_poolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2968,
                          "src": "28540:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2974,
                            "name": "PoolType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1733,
                            "src": "28553:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                              "typeString": "type(enum LSSVMPair.PoolType)"
                            }
                          },
                          "id": 2975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "28562:5:14",
                          "memberName": "TRADE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1732,
                          "src": "28553:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          }
                        },
                        "src": "28540:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666f7220547261646520706f6f6c73",
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28569:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_015c1c22a431f687676f711e486957c16214808069d820fa45e00ad37e6a7016",
                          "typeString": "literal_string \"Only for Trade pools\""
                        },
                        "value": "Only for Trade pools"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_015c1c22a431f687676f711e486957c16214808069d820fa45e00ad37e6a7016",
                          "typeString": "literal_string \"Only for Trade pools\""
                        }
                      ],
                      "id": 2972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28532:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28532:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2979,
                  "nodeType": "ExpressionStatement",
                  "src": "28532:60:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2981,
                          "name": "newFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "28610:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 2982,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1736,
                          "src": "28619:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28610:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520666565206d757374206265206c657373207468616e20393025",
                        "id": 2984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28628:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b38e190e098231753f4df9a78e27c786bb732780846d9c95b69ec1aa4f0b620",
                          "typeString": "literal_string \"Trade fee must be less than 90%\""
                        },
                        "value": "Trade fee must be less than 90%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b38e190e098231753f4df9a78e27c786bb732780846d9c95b69ec1aa4f0b620",
                          "typeString": "literal_string \"Trade fee must be less than 90%\""
                        }
                      ],
                      "id": 2980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28602:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28602:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2986,
                  "nodeType": "ExpressionStatement",
                  "src": "28602:60:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2987,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "28676:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2988,
                      "name": "newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2961,
                      "src": "28683:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "28676:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2999,
                  "nodeType": "IfStatement",
                  "src": "28672:92:14",
                  "trueBody": {
                    "id": 2998,
                    "nodeType": "Block",
                    "src": "28691:73:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2990,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "28705:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2991,
                            "name": "newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2961,
                            "src": "28711:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "28705:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 2993,
                        "nodeType": "ExpressionStatement",
                        "src": "28705:12:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2995,
                              "name": "newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2961,
                              "src": "28746:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 2994,
                            "name": "FeeUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1770,
                            "src": "28736:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$returns$__$",
                              "typeString": "function (uint96)"
                            }
                          },
                          "id": 2996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28736:17:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2997,
                        "nodeType": "EmitStatement",
                        "src": "28731:22:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2959,
              "nodeType": "StructuredDocumentation",
              "src": "28181:242:14",
              "text": "@notice Updates the fee taken by the LP. Only callable by the owner.\nOnly callable if the pool is a Trade pool. Reverts if the fee is >=\nMAX_FEE.\n@param newFee The new LP fee percentage, 18 decimals"
            },
            "functionSelector": "6b7a2200",
            "id": 3001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2963,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "28471:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "28471:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "28471:9:14"
              }
            ],
            "name": "changeFee",
            "nameLocation": "28437:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2961,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nameLocation": "28454:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3001,
                  "src": "28447:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 2960,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "28447:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28446:15:14"
            },
            "returnParameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28481:0:14"
            },
            "scope": 3162,
            "src": "28428:342:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3036,
              "nodeType": "Block",
              "src": "29062:269:14",
              "statements": [
                {
                  "assignments": [
                    3011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3011,
                      "mutability": "mutable",
                      "name": "_poolType",
                      "nameLocation": "29081:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 3036,
                      "src": "29072:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolType_$1733",
                        "typeString": "enum LSSVMPair.PoolType"
                      },
                      "typeName": {
                        "id": 3010,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3009,
                          "name": "PoolType",
                          "nameLocations": [
                            "29072:8:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1733,
                          "src": "29072:8:14"
                        },
                        "referencedDeclaration": 1733,
                        "src": "29072:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3014,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3012,
                      "name": "poolType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "29093:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_enum$_PoolType_$1733_$",
                        "typeString": "function () pure returns (enum LSSVMPair.PoolType)"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29093:10:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$1733",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29072:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PoolType_$1733",
                          "typeString": "enum LSSVMPair.PoolType"
                        },
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3016,
                          "name": "_poolType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3011,
                          "src": "29121:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 3017,
                            "name": "PoolType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1733,
                            "src": "29134:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PoolType_$1733_$",
                              "typeString": "type(enum LSSVMPair.PoolType)"
                            }
                          },
                          "id": 3018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "29143:5:14",
                          "memberName": "TRADE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1732,
                          "src": "29134:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolType_$1733",
                            "typeString": "enum LSSVMPair.PoolType"
                          }
                        },
                        "src": "29121:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420666f7220547261646520706f6f6c73",
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29150:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e19c281e985ec8657ad95cd80801bac30232d9abe7e0d9ae3e8b087931f913",
                          "typeString": "literal_string \"Not for Trade pools\""
                        },
                        "value": "Not for Trade pools"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e19c281e985ec8657ad95cd80801bac30232d9abe7e0d9ae3e8b087931f913",
                          "typeString": "literal_string \"Not for Trade pools\""
                        }
                      ],
                      "id": 3015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "29113:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29113:59:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3022,
                  "nodeType": "ExpressionStatement",
                  "src": "29113:59:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3023,
                      "name": "assetRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1744,
                      "src": "29186:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3024,
                      "name": "newRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "29204:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "29186:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3035,
                  "nodeType": "IfStatement",
                  "src": "29182:143:14",
                  "trueBody": {
                    "id": 3034,
                    "nodeType": "Block",
                    "src": "29218:107:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3026,
                            "name": "assetRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "29232:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3027,
                            "name": "newRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3004,
                            "src": "29249:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "29232:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3029,
                        "nodeType": "ExpressionStatement",
                        "src": "29232:29:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3031,
                              "name": "newRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3004,
                              "src": "29301:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3030,
                            "name": "AssetRecipientChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "29280:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29280:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3033,
                        "nodeType": "EmitStatement",
                        "src": "29275:39:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3002,
              "nodeType": "StructuredDocumentation",
              "src": "28776:182:14",
              "text": "@notice Changes the address that will receive assets received from\ntrades. Only callable by the owner.\n@param newRecipient The new asset recipient"
            },
            "functionSelector": "f4629549",
            "id": 3037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3006,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "29048:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "29048:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "29048:9:14"
              }
            ],
            "name": "changeAssetRecipient",
            "nameLocation": "28972:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3004,
                  "mutability": "mutable",
                  "name": "newRecipient",
                  "nameLocation": "29009:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3037,
                  "src": "28993:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28993:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28992:30:14"
            },
            "returnParameters": {
              "id": 3008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29062:0:14"
            },
            "scope": 3162,
            "src": "28963:368:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3075,
              "nodeType": "Block",
              "src": "29694:231:14",
              "statements": [
                {
                  "assignments": [
                    3049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3049,
                      "mutability": "mutable",
                      "name": "_factory",
                      "nameLocation": "29726:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 3075,
                      "src": "29704:30:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                        "typeString": "contract ILSSVMPairFactoryLike"
                      },
                      "typeName": {
                        "id": 3048,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3047,
                          "name": "ILSSVMPairFactoryLike",
                          "nameLocations": [
                            "29704:21:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1700,
                          "src": "29704:21:14"
                        },
                        "referencedDeclaration": 1700,
                        "src": "29704:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                          "typeString": "contract ILSSVMPairFactoryLike"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3052,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3050,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "29737:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ILSSVMPairFactoryLike_$1700_$",
                        "typeString": "function () pure returns (contract ILSSVMPairFactoryLike)"
                      }
                    },
                    "id": 3051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29737:9:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                      "typeString": "contract ILSSVMPairFactoryLike"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29704:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3056,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3040,
                            "src": "29785:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 3054,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3049,
                            "src": "29764:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILSSVMPairFactoryLike_$1700",
                              "typeString": "contract ILSSVMPairFactoryLike"
                            }
                          },
                          "id": 3055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "29773:11:14",
                          "memberName": "callAllowed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1679,
                          "src": "29764:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29764:28:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546172676574206d7573742062652077686974656c6973746564",
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29794:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a64a54870fbaead9f45a52bb2cce365ecc6b204b2a34862c49b56cfdbb48d05",
                          "typeString": "literal_string \"Target must be whitelisted\""
                        },
                        "value": "Target must be whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a64a54870fbaead9f45a52bb2cce365ecc6b204b2a34862c49b56cfdbb48d05",
                          "typeString": "literal_string \"Target must be whitelisted\""
                        }
                      ],
                      "id": 3053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "29756:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29756:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "29756:67:14"
                },
                {
                  "assignments": [
                    3062,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3062,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "29839:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 3075,
                      "src": "29834:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3061,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "29834:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3069,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3067,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "29873:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 3063,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3040,
                          "src": "29851:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "29858:4:14",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "29851:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 3065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29870:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "29851:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29851:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29833:45:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3071,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3062,
                        "src": "29896:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c206661696c6564",
                        "id": 3072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29904:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
                          "typeString": "literal_string \"Call failed\""
                        },
                        "value": "Call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
                          "typeString": "literal_string \"Call failed\""
                        }
                      ],
                      "id": 3070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "29888:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29888:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3074,
                  "nodeType": "ExpressionStatement",
                  "src": "29888:30:14"
                }
              ]
            },
            "documentation": {
              "id": 3038,
              "nodeType": "StructuredDocumentation",
              "src": "29337:254:14",
              "text": "@notice Allows the pair to make arbitrary external calls to contracts\nwhitelisted by the protocol. Only callable by the owner.\n@param target The contract to call\n@param data The calldata to pass to the contract"
            },
            "functionSelector": "1b8b921d",
            "id": 3076,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3045,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3044,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "29680:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "29680:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "29680:9:14"
              }
            ],
            "name": "call",
            "nameLocation": "29605:4:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3040,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "29626:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3076,
                  "src": "29610:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29610:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3042,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "29649:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3076,
                  "src": "29634:19:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3041,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29634:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29609:45:14"
            },
            "returnParameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29694:0:14"
            },
            "scope": 3162,
            "src": "29596:329:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3135,
              "nodeType": "Block",
              "src": "30467:547:14",
              "statements": [
                {
                  "body": {
                    "id": 3124,
                    "nodeType": "Block",
                    "src": "30513:294:14",
                    "statements": [
                      {
                        "assignments": [
                          3095,
                          3097
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3095,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "30533:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3124,
                            "src": "30528:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3094,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "30528:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3097,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "30555:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3124,
                            "src": "30542:19:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3096,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "30542:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3107,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3103,
                                "name": "calls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3080,
                                "src": "30609:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 3105,
                              "indexExpression": {
                                "id": 3104,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3088,
                                "src": "30615:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30609:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3100,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "30573:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                    "typeString": "contract LSSVMPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPair_$3162",
                                    "typeString": "contract LSSVMPair"
                                  }
                                ],
                                "id": 3099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "30565:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3098,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "30565:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30565:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "30579:12:14",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "30565:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30565:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "30527:104:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "30649:8:14",
                            "subExpression": {
                              "id": 3108,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3095,
                              "src": "30650:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 3110,
                            "name": "revertOnFail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3082,
                            "src": "30661:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "30649:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3119,
                        "nodeType": "IfStatement",
                        "src": "30645:92:14",
                        "trueBody": {
                          "id": 3118,
                          "nodeType": "Block",
                          "src": "30675:62:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3114,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3097,
                                        "src": "30714:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 3113,
                                      "name": "_getRevertMsg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3161,
                                      "src": "30700:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (bytes memory) pure returns (string memory)"
                                      }
                                    },
                                    "id": 3115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "30700:21:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 3112,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "30693:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30693:29:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3117,
                              "nodeType": "ExpressionStatement",
                              "src": "30693:29:14"
                            }
                          ]
                        }
                      },
                      {
                        "id": 3123,
                        "nodeType": "UncheckedBlock",
                        "src": "30751:46:14",
                        "statements": [
                          {
                            "expression": {
                              "id": 3121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "30779:3:14",
                              "subExpression": {
                                "id": 3120,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3088,
                                "src": "30781:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3122,
                            "nodeType": "ExpressionStatement",
                            "src": "30779:3:14"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3090,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3088,
                      "src": "30493:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3091,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "30497:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30503:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "30497:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30493:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3125,
                  "initializationExpression": {
                    "assignments": [
                      3088
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3088,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "30490:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3125,
                        "src": "30482:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30482:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3089,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30482:9:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "30477:330:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3127,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8810,
                            "src": "30920:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30920:7:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "30931:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "30935:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "30931:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "30920:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572736869702063616e6e6f74206265206368616e67656420696e206d756c746963616c6c",
                        "id": 3132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30955:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d57cdb31be4e6a5d41d3fc746a81315b74f51482e309fe875b9a103522d5eae",
                          "typeString": "literal_string \"Ownership cannot be changed in multicall\""
                        },
                        "value": "Ownership cannot be changed in multicall"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d57cdb31be4e6a5d41d3fc746a81315b74f51482e309fe875b9a103522d5eae",
                          "typeString": "literal_string \"Ownership cannot be changed in multicall\""
                        }
                      ],
                      "id": 3126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "30899:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30899:108:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3134,
                  "nodeType": "ExpressionStatement",
                  "src": "30899:108:14"
                }
              ]
            },
            "documentation": {
              "id": 3077,
              "nodeType": "StructuredDocumentation",
              "src": "29931:430:14",
              "text": "@notice Allows owner to batch multiple calls, forked from: https://github.com/boringcrypto/BoringSolidity/blob/master/contracts/BoringBatchable.sol\n@dev Intended for withdrawing/altering pool pricing in one tx, only callable by owner, cannot change owner\n@param calls The calldata for each call to make\n@param revertOnFail Whether or not to revert the entire tx if any of the calls fail"
            },
            "functionSelector": "1e9701d4",
            "id": 3136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3085,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3084,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "30453:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8824,
                  "src": "30453:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "30453:9:14"
              }
            ],
            "name": "multicall",
            "nameLocation": "30375:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3080,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "30402:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "30385:22:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3078,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "30385:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3079,
                    "nodeType": "ArrayTypeName",
                    "src": "30385:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "revertOnFail",
                  "nameLocation": "30414:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "30409:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30409:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30384:43:14"
            },
            "returnParameters": {
              "id": 3086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30467:0:14"
            },
            "scope": 3162,
            "src": "30366:648:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3160,
              "nodeType": "Block",
              "src": "31285:400:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3144,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "31410:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 3145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "31422:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "31410:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3638",
                      "id": 3146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31431:2:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "31410:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3150,
                  "nodeType": "IfStatement",
                  "src": "31406:67:14",
                  "trueBody": {
                    "expression": {
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31442:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 3143,
                    "id": 3149,
                    "nodeType": "Return",
                    "src": "31435:38:14"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "31493:95:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "31541:37:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "31560:11:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "31573:4:14",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "31556:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31556:22:14"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "31541:11:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "31541:11:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "31560:11:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 3151,
                  "nodeType": "InlineAssembly",
                  "src": "31484:104:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3154,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "31615:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 3156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31629:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 3155,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "31629:6:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 3157,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "31628:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 3152,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "31604:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "31608:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "31604:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31604:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3143,
                  "id": 3159,
                  "nodeType": "Return",
                  "src": "31597:40:14"
                }
              ]
            },
            "documentation": {
              "id": 3137,
              "nodeType": "StructuredDocumentation",
              "src": "31020:145:14",
              "text": "@param _returnData The data returned from a multicall result\n@dev Used to grab the revert string from the underlying call"
            },
            "id": 3161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRevertMsg",
            "nameLocation": "31179:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3139,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nameLocation": "31206:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3161,
                  "src": "31193:24:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3138,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "31193:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31192:26:14"
            },
            "returnParameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3161,
                  "src": "31266:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "31266:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31265:15:14"
            },
            "scope": 3162,
            "src": "31170:515:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3163,
        "src": "883:30804:14",
        "usedErrors": [
          1779,
          8782,
          8784
        ]
      }
    ],
    "src": "37:31651:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-02T11:37:45.599Z",
  "devdoc": {
    "author": "boredGenius and 0xmons",
    "kind": "dev",
    "methods": {
      "call(address,bytes)": {
        "params": {
          "data": "The calldata to pass to the contract",
          "target": "The contract to call"
        }
      },
      "changeAssetRecipient(address)": {
        "params": {
          "newRecipient": "The new asset recipient"
        }
      },
      "changeDelta(uint128)": {
        "params": {
          "newDelta": "The new delta parameter"
        }
      },
      "changeFee(uint96)": {
        "params": {
          "newFee": "The new LP fee percentage, 18 decimals"
        }
      },
      "changeSpotPrice(uint128)": {
        "params": {
          "newSpotPrice": "The new selling spot price value, in Token"
        }
      },
      "getBuyNFTQuote(uint256)": {
        "details": "Used as read function to query the bonding curve for buy pricing info",
        "params": {
          "numNFTs": "The number of NFTs to buy from the pair"
        }
      },
      "getSellNFTQuote(uint256)": {
        "details": "Used as read function to query the bonding curve for sell pricing info",
        "params": {
          "numNFTs": "The number of NFTs to sell to the pair"
        }
      },
      "initialize(address,address,uint128,uint96,uint128)": {
        "details": "Only called once by factory to initialize. We verify this by making sure that the current owner is address(0). The Ownable library we use disallows setting the owner to be address(0), so this condition should only be valid before the first initialize call.",
        "params": {
          "_assetRecipient": "The address that will receive the TOKEN or NFT sent to this pair during swaps. NOTE: If set to address(0), they will go to the pair itself.",
          "_delta": "The initial delta of the bonding curve",
          "_fee": "The initial % fee taken, if this is a trade pair",
          "_owner": "The owner of the pair",
          "_spotPrice": "The initial price to sell an asset into the pair"
        }
      },
      "multicall(bytes[],bool)": {
        "details": "Intended for withdrawing/altering pool pricing in one tx, only callable by owner, cannot change owner",
        "params": {
          "calls": "The calldata for each call to make",
          "revertOnFail": "Whether or not to revert the entire tx if any of the calls fail"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "swapNFTsForToken(uint256[],uint256,address,bool,address)": {
        "details": "To compute the amount of token to that will be received, call bondingCurve.getSellInfo.",
        "params": {
          "isRouter": "True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.",
          "minExpectedTokenOutput": "The minimum acceptable token received by the sender. If the actual amount is less than this value, the transaction will be reverted.",
          "nftIds": "The list of IDs of the NFTs to sell to the pair",
          "routerCaller": "If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs.",
          "tokenRecipient": "The recipient of the token output"
        },
        "returns": {
          "outputAmount": "The amount of token received"
        }
      },
      "swapTokenForAnyNFTs(uint256,uint256,address,bool,address)": {
        "details": "To compute the amount of token to send, call bondingCurve.getBuyInfo. This swap function is meant for users who are ID agnostic",
        "params": {
          "isRouter": "True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.",
          "maxExpectedTokenInput": "The maximum acceptable cost from the sender. If the actual amount is greater than this value, the transaction will be reverted.",
          "nftRecipient": "The recipient of the NFTs",
          "numNFTs": "The number of NFTs to purchase",
          "routerCaller": "If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs."
        },
        "returns": {
          "inputAmount": "The amount of token used for purchase"
        }
      },
      "swapTokenForSpecificNFTs(uint256[],uint256,address,bool,address)": {
        "details": "To compute the amount of token to send, call bondingCurve.getBuyInfo This swap is meant for users who want specific IDs. Also higher chance of reverting if some of the specified IDs leave the pool before the swap goes through.",
        "params": {
          "isRouter": "True if calling from LSSVMRouter, false otherwise. Not used for ETH pairs.",
          "maxExpectedTokenInput": "The maximum acceptable cost from the sender. If the actual amount is greater than this value, the transaction will be reverted.",
          "nftIds": "The list of IDs of the NFTs to purchase",
          "nftRecipient": "The recipient of the NFTs",
          "routerCaller": "If isRouter is true, ERC20 tokens will be transferred from this address. Not used for ETH pairs."
        },
        "returns": {
          "inputAmount": "The amount of token used for purchase"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Disallows setting to the zero address as a way to more gas-efficiently avoid reinitialization When ownership is transferred, if the new owner implements IOwnershipTransferCallback, we make a callback Can only be called by the current owner."
      },
      "withdrawERC1155(address,uint256[],uint256[])": {
        "params": {
          "a": "The NFT to transfer",
          "amounts": "The amounts of each id to transfer",
          "ids": "The NFT ids to transfer"
        }
      },
      "withdrawERC20(address,uint256)": {
        "params": {
          "a": "The token to transfer",
          "amount": "The amount of tokens to send to the owner"
        }
      },
      "withdrawERC721(address,uint256[])": {
        "details": "If the NFT is the pair's collection, we also remove it from the id tracking (if the NFT is missing enumerable).",
        "params": {
          "a": "The NFT to transfer",
          "nftIds": "The list of IDs of the NFTs to send to the owner"
        }
      }
    },
    "title": "The base contract for an NFT/TOKEN AMM pair",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bondingCurve()": {
        "notice": "Returns the type of bonding curve that parameterizes the pair"
      },
      "call(address,bytes)": {
        "notice": "Allows the pair to make arbitrary external calls to contracts whitelisted by the protocol. Only callable by the owner."
      },
      "changeAssetRecipient(address)": {
        "notice": "Changes the address that will receive assets received from trades. Only callable by the owner."
      },
      "changeDelta(uint128)": {
        "notice": "Updates the delta parameter. Only callable by the owner."
      },
      "changeFee(uint96)": {
        "notice": "Updates the fee taken by the LP. Only callable by the owner. Only callable if the pool is a Trade pool. Reverts if the fee is >= MAX_FEE."
      },
      "changeSpotPrice(uint128)": {
        "notice": "Updates the selling spot price. Only callable by the owner."
      },
      "getAllHeldIds()": {
        "notice": "Returns all NFT IDs held by the pool"
      },
      "getAssetRecipient()": {
        "notice": "Returns the address that assets that receives assets when a swap is done with this pair Can be set to another address by the owner, if set to address(0), defaults to the pair's own address"
      },
      "initialize(address,address,uint128,uint96,uint128)": {
        "notice": "Called during pair creation to set initial parameters"
      },
      "multicall(bytes[],bool)": {
        "notice": "Allows owner to batch multiple calls, forked from: https://github.com/boringcrypto/BoringSolidity/blob/master/contracts/BoringBatchable.sol"
      },
      "nft()": {
        "notice": "Returns the NFT collection that parameterizes the pair"
      },
      "pairVariant()": {
        "notice": "Returns the pair's variant (NFT is enumerable or not, pair uses ETH or ERC20)"
      },
      "poolType()": {
        "notice": "Returns the pair's type (TOKEN/NFT/TRADE)"
      },
      "swapNFTsForToken(uint256[],uint256,address,bool,address)": {
        "notice": "Sends a set of NFTs to the pair in exchange for token"
      },
      "swapTokenForAnyNFTs(uint256,uint256,address,bool,address)": {
        "notice": "Sends token to the pair in exchange for any `numNFTs` NFTs"
      },
      "swapTokenForSpecificNFTs(uint256[],uint256,address,bool,address)": {
        "notice": "Sends token to the pair in exchange for a specific set of NFTs"
      },
      "withdrawERC1155(address,uint256[],uint256[])": {
        "notice": "Rescues ERC1155 tokens from the pair to the owner. Only callable by the owner."
      },
      "withdrawERC20(address,uint256)": {
        "notice": "Rescues ERC20 tokens from the pair to the owner. Only callable by the owner (onlyOwnable modifier is in the implemented function)."
      },
      "withdrawERC721(address,uint256[])": {
        "notice": "Rescues a specified set of NFTs owned by the pair to the owner address. (onlyOwnable modifier is in the implemented function)"
      }
    },
    "notice": "This implements the core swap logic from NFT to TOKEN",
    "version": 1
  }
}